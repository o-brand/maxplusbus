(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    355766,       6917]
NotebookOptionsPosition[    346807,       6773]
NotebookOutlinePosition[    347257,       6790]
CellTagsIndexPosition[    347214,       6787]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"BeginPackage", "[", "\"\<max\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9205414418136578`*^9, 3.920541445472845*^9}, {
  3.9205414766098766`*^9, 
  3.920541478517847*^9}},ExpressionUUID->"216c8e68-752e-5042-94ff-\
66762cad0ecb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DataToAssociation", "[", "filename_", "]"}], " ", ":=", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"data", " ", "=", " ", 
        RowBox[{"Import", "[", 
         RowBox[{
          RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"NotebookDirectory", "[", "]"}], ",", " ", "filename"}], 
            "}"}], "]"}], ",", "\"\<Table\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"transpose", " ", "=", " ", 
        RowBox[{"Transpose", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"timeData", "=", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"Rest", "[", "transpose", "]"}], "/.", " ", 
          RowBox[{"minutes_Integer", ":>", 
           RowBox[{"TimeObject", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Quotient", "[", 
               RowBox[{"minutes", ",", "100"}], "]"}], ",", 
              RowBox[{"Mod", "[", 
               RowBox[{"minutes", ",", "100"}], "]"}], ",", "0"}], "}"}], 
            "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"timeDiffTable", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"timeData", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "j"}], "]"}], "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], "-", 
             RowBox[{
              RowBox[{"timeData", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "j"}], "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", "2", ",", " ", 
              RowBox[{"Length", "[", "timeData", "]"}]}], "}"}]}], "]"}], ",",
           " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "1", ",", " ", 
            RowBox[{"Length", "[", 
             RowBox[{"Transpose", "[", "timeData", "]"}], "]"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"maxModeTimes", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"Commonest", "[", 
            RowBox[{"timeDiffTable", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "i"}], "]"}], "]"}], "]"}], "]"}], ",",
           " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", 
            RowBox[{"Length", "[", 
             RowBox[{"timeDiffTable", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"stopPairs", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"List", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"First", "[", "transpose", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"First", "[", "transpose", "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "2", ",", " ", 
            RowBox[{
             RowBox[{"Length", "[", "maxModeTimes", "]"}], "+", "1"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"association", " ", "=", " ", 
        RowBox[{"Association", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"stopPairs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "->", 
            RowBox[{"maxModeTimes", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "1", ",", " ", 
             RowBox[{"Length", "[", "stopPairs", "]"}]}], "}"}]}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"waiting", " ", "=", " ", 
        RowBox[{"Association", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Keys", "[", "association", "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], "->", "\[IndentingNewLine]", 
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"Keys", "[", "association", "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                   RowBox[{"-", "4"}]}], "]"}], " ", "==", " ", 
                 "\"\<_arr\>\""}], " ", "&&", " ", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"Keys", "[", "association", "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                   RowBox[{"-", "4"}]}], "]"}], " ", "==", " ", 
                 "\"\<_dep\>\""}]}], ")"}], " ", ",", "\[IndentingNewLine]", 
              RowBox[{"association", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "[", 
                 RowBox[{
                  RowBox[{"Keys", "[", "association", "]"}], "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
              " ", 
              TemplateBox[{"0", "\"min\"", "minutes", "\"Minutes\""},
               "Quantity"]}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "1", ",", " ", 
             RowBox[{"Length", "[", 
              RowBox[{"Keys", "[", "association", "]"}], "]"}]}], "}"}]}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"travelTimeAssociation", " ", "=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "cleaned", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"cleaned", " ", "=", " ", 
            RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"i", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"i", " ", "<", 
              RowBox[{"Length", "[", "association", "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"i", "++"}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"waiting", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "==", 
                  RowBox[{"0", 
                   TemplateBox[{
                    InterpretationBox["\[InvisibleSpace]", 1], "\"min\"", 
                    "minutes", "\"Minutes\""},
                    "Quantity"]}]}], " ", "&&", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Keys", "[", "association", "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"-", "4"}]}], "]"}], " ", "==", " ", 
                    "\"\<_dep\>\""}], " ", "||", " ", 
                   RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Keys", "[", "association", "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                    RowBox[{"-", "4"}]}], "]"}], " ", "==", " ", 
                    "\"\<_arr\>\""}]}], ")"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Keys", "[", "association", "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"-", "4"}]}], "]"}], " ", "==", " ", 
                   "\"\<_dep\>\""}], ",", "\[IndentingNewLine]", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"cleaned", ",", " ", 
                    RowBox[{
                    RowBox[{"List", "[", 
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Keys", "[", "association", "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"-", "4"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Keys", "[", "association", "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "->", " ", 
                    RowBox[{"association", "[", 
                    RowBox[{"[", 
                    RowBox[{"Key", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", "association", "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}]}]}], 
                   "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"cleaned", ",", " ", 
                    RowBox[{
                    RowBox[{"List", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Keys", "[", "association", "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"StringDrop", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Keys", "[", "association", "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                    RowBox[{"-", "4"}]}], "]"}]}], "]"}], "->", " ", 
                    RowBox[{"association", "[", 
                    RowBox[{"[", 
                    RowBox[{"Key", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", "association", "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}]}]}], 
                   "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"If", " ", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"waiting", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "==", 
                   RowBox[{"0", 
                    TemplateBox[{
                    InterpretationBox["\[InvisibleSpace]", 1], "\"min\"", 
                    "minutes", "\"Minutes\""},
                    "Quantity"]}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"cleaned", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", "association", "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], " ", "=", " ", 
                   RowBox[{"association", "[", 
                    RowBox[{"[", 
                    RowBox[{"Key", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", "association", "]"}], "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"Nothing", "[", "]"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Nothing", "[", "]"}]}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "cleaned"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"allStops", " ", "=", " ", 
        RowBox[{"List", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"allStops", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Keys", "[", "travelTimeAssociation", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"allStops", ",", " ", 
           RowBox[{"x", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", 
           RowBox[{"Keys", "[", "travelTimeAssociation", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"List", "[", 
         RowBox[{
         "travelTimeAssociation", ",", " ", "waiting", ",", " ", "allStops"}],
          "]"}], "*)"}], "\[IndentingNewLine]", "travelTimeAssociation"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SharedStops", "[", 
     RowBox[{"route1_", ",", " ", "route2_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Intersection", "[", 
     RowBox[{
      RowBox[{"Stops", "[", "route1", "]"}], ",", " ", 
      RowBox[{"Stops", "[", "route2", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.917690072839719*^9, 3.917690091103447*^9}, {
   3.917690165815135*^9, 3.917690189074575*^9}, {3.9176902336767597`*^9, 
   3.9176904175572233`*^9}, {3.917690494335567*^9, 3.917690601712038*^9}, {
   3.917690785135433*^9, 3.917690942224687*^9}, {3.917690992472266*^9, 
   3.9176909998754187`*^9}, {3.917691035170209*^9, 3.917691094160016*^9}, {
   3.9176911296705103`*^9, 3.917691131193386*^9}, {3.9176912404488487`*^9, 
   3.917691273628154*^9}, {3.917691370661661*^9, 3.917691372873627*^9}, {
   3.917691544912178*^9, 3.917691550151727*^9}, {3.917691687573567*^9, 
   3.917691688023407*^9}, {3.917691856599805*^9, 3.917691911398108*^9}, {
   3.917691960439886*^9, 3.9176919791298428`*^9}, {3.917692057008235*^9, 
   3.91769210404035*^9}, {3.9176922003868837`*^9, 3.917692227054681*^9}, {
   3.917692328966732*^9, 3.917692424999152*^9}, {3.917692508926996*^9, 
   3.917692517050134*^9}, {3.917692554523576*^9, 3.917692607136732*^9}, {
   3.917692640545907*^9, 3.917692641354704*^9}, {3.917693437384375*^9, 
   3.91769360794453*^9}, {3.917693750976593*^9, 3.917693833900203*^9}, {
   3.917693919695084*^9, 3.917693945662416*^9}, {3.917693987167234*^9, 
   3.917693992024319*^9}, {3.917694038659127*^9, 3.917694129940361*^9}, {
   3.917694160434215*^9, 3.917694191514268*^9}, {3.917694223656204*^9, 
   3.917694287135005*^9}, {3.917694333762045*^9, 3.917694363926326*^9}, {
   3.917694496619832*^9, 3.917694510975758*^9}, {3.917694543090089*^9, 
   3.917694550335698*^9}, {3.917694584859483*^9, 3.917694585192518*^9}, {
   3.9176949292163754`*^9, 3.917695033635714*^9}, {3.917695064352936*^9, 
   3.917695067104762*^9}, {3.917695112705373*^9, 3.91769513335561*^9}, 
   3.917695165080637*^9, {3.917695583180797*^9, 3.917695774915558*^9}, {
   3.917695885033807*^9, 3.917695911842515*^9}, {3.917695946538834*^9, 
   3.917696045179953*^9}, {3.917696085907688*^9, 3.9176961085198307`*^9}, {
   3.917696154207357*^9, 3.91769621518382*^9}, {3.917696252024366*^9, 
   3.917696256710489*^9}, {3.9176973353680143`*^9, 3.917697348163992*^9}, {
   3.917697412436771*^9, 3.917697531038753*^9}, {3.917697562172315*^9, 
   3.917697578732089*^9}, {3.917697644028819*^9, 3.91769765511512*^9}, {
   3.917697772692816*^9, 3.917697787367522*^9}, {3.917697843702875*^9, 
   3.917697891870893*^9}, {3.917697962410023*^9, 3.917698068085572*^9}, {
   3.9176981554255753`*^9, 3.917698250310137*^9}, {3.917698538028064*^9, 
   3.9176985630416307`*^9}, {3.9176985998599977`*^9, 3.917698601858124*^9}, 
   3.917698672957652*^9, {3.917698717903707*^9, 3.917698770516547*^9}, {
   3.917698802302614*^9, 3.917698824197468*^9}, {3.917699975953951*^9, 
   3.9177000841626673`*^9}, {3.917700253971996*^9, 3.91770030659404*^9}, {
   3.9177007814887257`*^9, 3.917700786776804*^9}, {3.917703446891843*^9, 
   3.917703548201669*^9}, {3.9177041161285*^9, 3.917704123116838*^9}, {
   3.917704155833889*^9, 3.917704178764097*^9}, {3.917704256256967*^9, 
   3.917704313149755*^9}, {3.917704350543668*^9, 3.9177044125032673`*^9}, {
   3.917704450644949*^9, 3.917704648395186*^9}, {3.917704683799494*^9, 
   3.917704835888377*^9}, {3.917704879950138*^9, 3.917704918412982*^9}, {
   3.9177050573633432`*^9, 3.917705060704392*^9}, {3.9177051380251503`*^9, 
   3.917705148884366*^9}, {3.917705196671082*^9, 3.917705289213851*^9}, {
   3.917705325935296*^9, 3.917705419496413*^9}, {3.917705457508517*^9, 
   3.917705462058307*^9}, {3.917707249675005*^9, 3.9177072695132303`*^9}, {
   3.917707805833947*^9, 3.917707814192382*^9}, {3.917708108059925*^9, 
   3.9177081471086063`*^9}, {3.917708185219902*^9, 3.917708257945709*^9}, {
   3.917708699306264*^9, 3.917708712399757*^9}, {3.917708745393299*^9, 
   3.917708755310122*^9}, {3.9177089416440887`*^9, 3.917708941827879*^9}, {
   3.9177089774530067`*^9, 3.917709061405451*^9}, {3.917709092786858*^9, 
   3.917709149769198*^9}, {3.917709256836886*^9, 3.917709260354549*^9}, {
   3.917709304557418*^9, 3.917709312872009*^9}, {3.9177095494134493`*^9, 
   3.917709572570799*^9}, {3.918803895305233*^9, 3.918803939957145*^9}, {
   3.9188039767945557`*^9, 3.918804000678975*^9}, {3.918804033639564*^9, 
   3.918804076024797*^9}, {3.918804200662803*^9, 3.918804343111988*^9}, {
   3.918804384793647*^9, 3.9188044224454393`*^9}, {3.9188044555341988`*^9, 
   3.918804470231634*^9}, {3.918819121049524*^9, 3.918819146745064*^9}, {
   3.918819405906759*^9, 3.918819484255077*^9}, {3.918819522845727*^9, 
   3.918819705166541*^9}, {3.918831888663071*^9, 3.918831930243536*^9}, {
   3.918831962707137*^9, 3.918832000005254*^9}, {3.9188860314961157`*^9, 
   3.918886032705477*^9}, {3.91889173224033*^9, 3.918891737884916*^9}, {
   3.918892639329525*^9, 3.9188926409237947`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"35ed2c39-e45d-43b6-aefa-edd2ea779dce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x_", "\[CirclePlus]", "y_"}], ":=", 
  RowBox[{"Max", "[", 
   RowBox[{"x", ",", "y"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[3]:=",ExpressionUUID->"4e5a63ce-f4f1-4277-910d-88d6901710fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x_", " ", "\[CircleTimes]", "y_"}], ":=", 
  RowBox[{"x", "+", "y"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[4]:=",ExpressionUUID->"967114cb-0f1b-4adf-b847-4e75c9c0952d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mplus", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"MapThread", "[", 
   RowBox[{"Max", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", " ", "2"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.919498502142851*^9, 3.919498502723211*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"411b306c-7b23-43ff-9265-ae38e8a76e03"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mtimes", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Inner", "[", 
   RowBox[{"Plus", ",", "x", ",", "y", ",", "Max"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.919497192200096*^9, 3.919497209266314*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"feec1f19-81d5-47bf-be9b-f03958b3cd32"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mpower", "[", 
    RowBox[{"x_", ",", "p_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", ">=", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"res", " ", "=", " ", "x"}], ",", "\[IndentingNewLine]", 
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"EMatrix", "[", 
          RowBox[{"Length", "[", "x", "]"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", " ", "=", " ", "2"}], ",", " ", 
        RowBox[{"i", "<=", "p"}], ",", " ", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"mtimes", "[", 
          RowBox[{"res", ",", " ", "x"}], "]"}]}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "res"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQbZDO9veG8VtHnbdWXDeBNMeUcE8Q/afxijeI5v80
+SCItl75DEwH/TI5BaLT9vRfBNGF7jmvQHRNqsVbEP2kf943EL1U4ZTkLSAt
t8lMJszkrWOik64siK7NDVUC0c8iF2iB6FW9B/RBtBTvW1MQ/Y3N3RFEq0Rw
u4HocqMDESA6cnpCHojmZK+vBdFHfj1pANHXrkovBNHyByyXgOjeI90rQPSl
+Z/BdM+5b2tBtHXhrs0gemLC/R1g8xmkboHoUP0XfOFAet60EgEQfa2+RBFE
K6/9AqZNrKtzlwPpNQJnqkD0jlNrJoBoJs3zU0A0ABmsmxU=
  "],
 CellLabel->"In[7]:=",ExpressionUUID->"28d1f9ad-ae6f-4e96-ba1e-0995b1b81b0f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mpowerDynamic", "[", 
    RowBox[{"x_", ",", " ", "p_", ",", " ", "kpx_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"closestBelow", ",", " ", "pow", ",", " ", "pows"}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pows", " ", "=", " ", "kpx"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", ">", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"closestBelow", " ", "=", 
          RowBox[{"Max", "@", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Keys", "[", "kpx", "]"}], ",", 
             RowBox[{
              RowBox[{"#", "<=", "p"}], "&"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"pow", " ", "=", 
          RowBox[{"pows", "[", "closestBelow", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", " ", "=", " ", 
            RowBox[{"closestBelow", "+", "1"}]}], ",", " ", 
           RowBox[{"i", "<=", "p"}], ",", " ", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"pow", " ", "=", " ", 
             RowBox[{"mtimes", "[", 
              RowBox[{"pow", ",", " ", "x"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"pows", ",", " ", 
              RowBox[{"i", "->", "pow"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"p", " ", "<=", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"pow", "=", 
            RowBox[{"EMatrix", "[", 
             RowBox[{"Length", "[", "x", "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"pow", "=", "x"}]}], "\[IndentingNewLine]", "]"}], ";"}]}],
        "\[IndentingNewLine]", "]"}], ";", "\n", 
      RowBox[{"List", "[", 
       RowBox[{"pow", ",", " ", "pows"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQbZDO9veG8VtHnbdWXDeBNMeUcE8Q/afxijeI5v80
+SCItl75DEwH/TI5BaLT9vRfBNGF7jmvQHRNqsVbEP2kf943EL1U4ZTkLSAt
t8lMJszkrWOik64siK7NDVUC0c8iF2iB6FW9B/RBtBTvW1MQ/Y3N3RFEq0Rw
u4HocqMDESA6cnpCHojmZK+vBdFHfj1pANHXrkovBNHyByyXgOjeI90rQPSl
+Z/BdM+5b2tBtHXhrs0gemLC/R1g8xmkboHoUP0XfOFAet60EgEQfa2+RBFE
K6/9AqZNrKtzlwPpNQJnqkD0jlNrJoBoJs3zU0C0cN/CmSDahbdzDoiOMvu1
CESHi/9ZCaK/rhPcCqI/M3/aDqJfbIk/CqIDrlWBaQALhL0e
  "],
 CellLabel->"In[8]:=",ExpressionUUID->"aff26f37-7117-4890-937b-705ec5cb0178"],

Cell[BoxData[
 RowBox[{
  RowBox[{"scalarplus", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Outer", "[", 
   RowBox[{"Max", ",", 
    RowBox[{"{", "x", "}"}], ",", "y"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[9]:=",ExpressionUUID->"01eb0f01-0036-4525-a9b3-39fef5d7e25f"],

Cell[BoxData[
 RowBox[{"eps", "=", 
  RowBox[{"-", "Infinity"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[10]:=",ExpressionUUID->"415293d7-cd90-436d-831a-12617695ee19"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"EpsilonMatrix", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"eps", ",", " ", 
      RowBox[{"{", 
       RowBox[{"col", ",", " ", "1", ",", " ", "n"}], "}"}]}], "]"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"row", ",", " ", "1", ",", " ", "n"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Returns", " ", "an", " ", "n", " ", "x", " ", "n", " ", "matrix", " ", 
    "filled", " ", "with", " ", "Epsilon"}], " ", "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.919427370695837*^9, 3.9194273951596165`*^9}, {
  3.9194274525299206`*^9, 3.919427540199921*^9}, {3.919427748789751*^9, 
  3.919427824319692*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"712ddaa6-5276-dc41-8189-2c075736714f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"EMatrix", "[", "n_", "]"}], ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"col", " ", "==", " ", "row"}], ",", " ", "0", ",", " ", 
        "eps"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"col", ",", " ", "1", ",", " ", "n"}], "}"}]}], "]"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"row", ",", " ", "1", ",", " ", "n"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Returns", " ", "an", " ", "n", " ", "x", " ", "n", " ", "identity", " ", 
    "matrix"}], " ", "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.919427629779953*^9, 3.919427706369461*^9}, {
  3.919427806759735*^9, 3.9194278302449207`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"2e00cdda-36f4-a343-b839-3545576149c4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MakeNicePlaceName", "[", 
   RowBox[{"rn_", ",", " ", "s1_", ",", " ", "s2_"}], "]"}], " ", ":=", 
  RowBox[{"ToString", "[", 
   RowBox[{"StringJoin", "[", 
    RowBox[{
    "\"\<p:\>\"", ",", "rn", ",", "\"\<:\>\"", ",", " ", "s1", ",", " ", 
     "\"\<+\>\"", ",", " ", "s2"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"returns", " ", "a", " ", "formatted", " ", "place", " ", "name"}],
    " ", "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.918894061589178*^9, 3.9188940743480263`*^9}, {
  3.918894138217189*^9, 3.918894170051134*^9}, {3.9188943210645943`*^9, 
  3.918894321524403*^9}, {3.919143842875165*^9, 3.919143843878259*^9}, {
  3.91914638646982*^9, 3.91914641101024*^9}, {3.91933012259851*^9, 
  3.919330131079455*^9}, {3.9205413812545547`*^9, 
  3.920541391877432*^9}},ExpressionUUID->"3c92f7e5-657e-4fa3-acf6-\
ac40181cf10e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MakeNiceTransitionName", "[", 
   RowBox[{"rn_", ",", "q_"}], "]"}], " ", ":=", " ", 
  RowBox[{"ToString", "[", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"\"\<q:\>\"", ",", "rn", ",", "\"\<:\>\"", ",", " ", "q"}], "]"}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "returns", " ", "a", " ", "formatted", " ", "transition", " ", "name"}], 
   " ", "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.917709537852675*^9, 3.917709545818152*^9}, {
  3.917709577057252*^9, 3.917709591286549*^9}, {3.917709629472536*^9, 
  3.917709663632736*^9}, {3.918881601329464*^9, 3.918881601834118*^9}, {
  3.918884925631616*^9, 3.918884943935427*^9}, {3.918885794809847*^9, 
  3.918885828819264*^9}, {3.918887072654002*^9, 3.918887108977192*^9}, {
  3.918889397500215*^9, 3.918889398126083*^9}, {3.918893112930521*^9, 
  3.918893122240788*^9}, {3.918893973784858*^9, 3.918894005903788*^9}, {
  3.919141875065089*^9, 3.919142054059657*^9}, {3.919142169073207*^9, 
  3.9191422465946903`*^9}, {3.919142282771018*^9, 3.9191423722853813`*^9}, {
  3.919146403314769*^9, 3.91914641885872*^9}, {3.919330079514592*^9, 
  3.919330096911721*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"03550ad2-3d82-4105-92c8-afa73c5457fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MergeDirections", "[", 
   RowBox[{"forward_", ",", " ", "reverse_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "f", ",", " ", "r", ",", " ", "merged", ",", " ", "nk", ",", " ", "xS", 
      ",", " ", "start", ",", " ", "end"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "merges", " ", "the", " ", "forward", " ", "and", " ", "backward", " ", 
      RowBox[{"(", "arbitary", ")"}], " ", "directions", " ", "of", " ", "a", 
      " ", "bus", " ", "route"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"f", " ", "=", " ", 
      RowBox[{"DataToAssociation", "[", "forward", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"start", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Keys", "[", "f", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"r", " ", "=", " ", 
      RowBox[{"DataToAssociation", "[", "reverse", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"end", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Keys", "[", "r", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"nk", " ", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], " ", "==", "start"}], ",", 
               "\"\<_end\>\"", ",", "\"\<_fwd\>\""}], "]"}]}], "]"}], ",", 
           " ", 
           RowBox[{"StringJoin", "[", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], " ", "==", "end"}], ",", 
               "\"\<_end\>\"", ",", "\"\<_fwd\>\""}], "]"}]}], "]"}]}], 
          "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", "nk", "]"}], " ", "=", " ", 
         RowBox[{"f", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", "x", "]"}], " ", "=."}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", 
         RowBox[{"Keys", "[", "f", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"nk", " ", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], " ", "==", "end"}], ",", 
               "\"\<_end\>\"", ",", "\"\<_rev\>\""}], "]"}]}], "]"}], ",", 
           RowBox[{"StringJoin", "[", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "  ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], " ", "==", "start"}], ",", 
               "\"\<_end\>\"", ",", "\"\<_rev\>\""}], "]"}]}], "]"}]}], 
          "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"r", "[", "nk", "]"}], " ", "=", " ", 
         RowBox[{"r", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"r", "[", "x", "]"}], " ", "=."}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", 
         RowBox[{"Keys", "[", "r", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"merged", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"f", ",", " ", "r"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "merged"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.91914247221876*^9, 3.919142477729063*^9}, {
   3.919142511325086*^9, 3.9191426023218727`*^9}, 3.919142648471376*^9, {
   3.919142685591284*^9, 3.919142692770675*^9}, {3.919142745134561*^9, 
   3.919142850123893*^9}, {3.9191428855745173`*^9, 3.919142978643355*^9}, {
   3.9191430180308733`*^9, 3.91914310739019*^9}, {3.919143139240511*^9, 
   3.919143342742365*^9}, {3.919143380209844*^9, 3.919143392247274*^9}, {
   3.919144744961924*^9, 3.919144745173923*^9}, {3.919318259676495*^9, 
   3.919318307118628*^9}, 3.919319452074347*^9, {3.919327731815255*^9, 
   3.919327756771662*^9}, {3.919327892181288*^9, 3.919327893081295*^9}, {
   3.919329932862021*^9, 3.919330057963992*^9}, 3.919330140294734*^9, {
   3.919594711480305*^9, 3.919594765385214*^9}, {3.9195948102704906`*^9, 
   3.9195948149303684`*^9}, 3.9195948792703648`*^9, {3.9195949165051746`*^9, 
   3.9195949192854404`*^9}, {3.919594950250065*^9, 3.919594987660036*^9}, {
   3.919595037465334*^9, 3.9195951426101418`*^9}, {3.9195951770150623`*^9, 
   3.919595334189426*^9}, {3.919652773299438*^9, 3.919652814789223*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"31323f97-3ab2-4596-9971-6c88e6062f81"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetTransitionStopName", "[", "transitionString_", "]"}], " ", ":=",
     " ", 
    RowBox[{"StringDrop", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringSplit", "[", 
        RowBox[{"transitionString", ",", " ", "\"\<:\>\""}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], ",", 
      RowBox[{"-", "4"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "returns", " ", "the", " ", "transition", " ", "name", " ", "from", " ", 
    "a", " ", "\"\<nice\>\"", " ", "formatted", " ", "transition"}], " ", 
   "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetTransitionStop", "[", "transitionString_", "]"}], ":=", 
   RowBox[{
    RowBox[{"StringSplit", "[", 
     RowBox[{"transitionString", ",", " ", "\"\<:\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"returns", " ", "the", " ", "transition", " ", "stop"}], ",", " ", 
    RowBox[{
    "including", " ", "route", " ", "direction", " ", "from", " ", "a", " ", 
     "\"\<nice\>\"", " ", "formatted", " ", "transition"}]}], " ", 
   "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.91914247221876*^9, 3.919142477729063*^9}, {
   3.919142511325086*^9, 3.9191426023218727`*^9}, 3.919142648471376*^9, {
   3.919142685591284*^9, 3.919142692770675*^9}, {3.919142745134561*^9, 
   3.919142850123893*^9}, {3.9191428855745173`*^9, 3.919142978643355*^9}, {
   3.9191430180308733`*^9, 3.91914310739019*^9}, {3.919143139240511*^9, 
   3.919143342742365*^9}, {3.919143380209844*^9, 3.919143392247274*^9}, {
   3.919144744961924*^9, 3.919144745173923*^9}, {3.919318259676495*^9, 
   3.919318307118628*^9}, 3.919319452074347*^9, {3.919327731815255*^9, 
   3.919327756771662*^9}, {3.919327892181288*^9, 3.919327893081295*^9}, {
   3.919329932862021*^9, 3.919329976568008*^9}, {3.919330105141409*^9, 
   3.919330106779214*^9}, {3.919494834129418*^9, 3.919494895315906*^9}, 
   3.9205414020236454`*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"eb56b9bb-dadc-4427-ab0e-80b258751220"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetTransitionRoute", "[", "transitionString_", "]"}], " ", ":=", 
    RowBox[{
     RowBox[{"StringSplit", "[", 
      RowBox[{"transitionString", ",", " ", "\"\<:\>\""}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "returns", " ", "the", " ", "transition", " ", "route", " ", "number", " ",
     "from", " ", "a", " ", "\"\<nice\>\"", " ", "formatted", " ", 
    "transition"}], " ", "*)"}], "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.91914247221876*^9, 3.919142477729063*^9}, {
   3.919142511325086*^9, 3.9191426023218727`*^9}, 3.919142648471376*^9, {
   3.919142685591284*^9, 3.919142692770675*^9}, {3.919142745134561*^9, 
   3.919142850123893*^9}, {3.9191428855745173`*^9, 3.919142978643355*^9}, {
   3.9191430180308733`*^9, 3.91914310739019*^9}, {3.919143139240511*^9, 
   3.919143342742365*^9}, {3.919143380209844*^9, 3.919143392247274*^9}, {
   3.919144744961924*^9, 3.919144745173923*^9}, {3.919318259676495*^9, 
   3.919318307118628*^9}, 3.919319452074347*^9, {3.919327731815255*^9, 
   3.919327756771662*^9}, {3.919327892181288*^9, 3.919327893081295*^9}, {
   3.919329932862021*^9, 3.919329976568008*^9}, {3.919330101691568*^9, 
   3.9193301153126583`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"037e4956-b6cf-4d8a-a6fb-8a303e193e40"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Algorithm821", "[", 
    RowBox[{"lineDataFile_", ",", " ", "routeNumbers_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Line", " ", "data", " ", "file", " ", "is", " ", "a", " ", "list", " ", 
      "of", " ", "associations"}], ",", " ", 
     RowBox[{
     "where", " ", "each", " ", "asscoiation", " ", "corresponds", " ", "to", 
      " ", "a", " ", "merged", " ", "version", " ", "of", " ", "the", " ", 
      "TT", " ", "association", " ", "for", " ", "the", " ", "forward", " ", 
      "and", " ", "backward", " ", "journey", " ", "of", " ", "a", " ", 
      "given", " ", 
      RowBox[{"route", ".", " ", "So"}], " ", "each", " ", "association", " ",
       "represents", " ", "a", " ", "route"}]}], "*)"}], "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "TAPsFromRoute", ",", " ", "Synchronization", ",", " ", "NumberRoutes", 
       ",", " ", "cycleTime"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"cycleTime", " ", "=", 
         RowBox[{"60", 
          TemplateBox[{
            InterpretationBox["\[InvisibleSpace]", 1], "\"min\"", "minutes", 
            "\"Minutes\""},
           "Quantity"]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NumberRoutes", "[", "]"}], " ", ":=", " ", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "indexedAssociations", "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "returns", " ", "an", " ", "association", " ", "with", " ", 
             "route", " ", "number", " ", "as", " ", "key", " ", "and", " ", 
             "travel", " ", "time", " ", "associations", " ", 
             RowBox[{"(", 
              RowBox[{"route", " ", "data"}], ")"}], " ", "as", " ", 
             "values"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"indexedAssociations", " ", "=", " ", 
             RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<=", 
               RowBox[{"Length", "[", "routeNumbers", "]"}]}], ",", " ", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"indexedAssociations", "[", 
                 RowBox[{"routeNumbers", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "=", " ", 
                RowBox[{"lineDataFile", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            "indexedAssociations"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TAPsFromRoute", "[", 
          RowBox[{"routeNumber_", ",", " ", "routeAssociation_"}], "]"}], " ",
          ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "startStop", ",", " ", "endStop", ",", " ", "cumulativeTime", ",",
              "nextStopCumulativeTime", ",", " ", "modCumulative", ",", " ", 
             "modNextCumulative", ",", "tokens", ",", " ", "finalHoldingTime",
              ",", " ", "transitions", ",", " ", "places", ",", " ", "arcs"}],
             "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"returns", " ", "the", " ", "transitions"}], ",", " ", 
             "arcs", ",", " ", 
             RowBox[{
             "and", " ", "place", " ", "of", " ", "an", " ", "individual", 
              " ", "route"}]}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"transitions", " ", "=", " ", 
             RowBox[{"List", "[", "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"places", " ", "=", " ", 
             RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"arcs", " ", "=", " ", 
             RowBox[{"List", "[", "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"startStop", " ", "=", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"Keys", "[", "routeAssociation", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"endStop", " ", "=", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"Keys", "[", "routeAssociation", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"transitions", ",", 
              RowBox[{"MakeNiceTransitionName", "[", 
               RowBox[{"routeNumber", ",", " ", "startStop"}], "]"}]}], "]"}],
             ";", "\[IndentingNewLine]", 
            RowBox[{"cumulativeTime", " ", "=", " ", 
             RowBox[{"0", 
              TemplateBox[{
                InterpretationBox["\[InvisibleSpace]", 1], "\"min\"", 
                "minutes", "\"Minutes\""},
               "Quantity"]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Do", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"transitions", ",", 
                 RowBox[{"MakeNiceTransitionName", "[", 
                  RowBox[{"routeNumber", ",", " ", 
                   RowBox[{"pair", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"nextStopCumulativeTime", " ", "=", 
                RowBox[{"cumulativeTime", " ", "+", " ", 
                 RowBox[{"routeAssociation", "[", 
                  RowBox[{"[", 
                   RowBox[{"Key", "[", "pair", "]"}], "]"}], "]"}]}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"modCumulative", " ", "=", " ", 
                RowBox[{"Mod", "[", 
                 RowBox[{"cumulativeTime", ",", " ", "cycleTime"}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"modNextCumulative", " ", "=", " ", 
                RowBox[{"Mod", "[", 
                 RowBox[{"nextStopCumulativeTime", ",", " ", "cycleTime"}], 
                 "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"tokens", " ", "=", " ", 
                RowBox[{"Ceiling", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"routeAssociation", "[", 
                    RowBox[{"[", 
                    RowBox[{"Key", "[", "pair", "]"}], "]"}], "]"}], " ", "+",
                     " ", "modCumulative", " ", "-", " ", 
                    "modNextCumulative"}], ")"}], "/", "cycleTime"}], "]"}]}],
                ";", "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"places", ",", "  ", 
                 RowBox[{
                  RowBox[{"MakeNicePlaceName", "[", 
                   RowBox[{"routeNumber", ",", " ", 
                    RowBox[{"pair", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"pair", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "->", 
                  RowBox[{"List", "[", 
                   RowBox[{
                    RowBox[{"routeAssociation", "[", 
                    RowBox[{"[", 
                    RowBox[{"Key", "[", "pair", "]"}], "]"}], "]"}], ",", " ",
                     "tokens"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{
               "cumulativeTime", " ", "=", " ", "nextStopCumulativeTime"}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"arcs", ",", " ", 
                 RowBox[{
                  RowBox[{"MakeNiceTransitionName", "[", 
                   RowBox[{"routeNumber", ",", " ", 
                    RowBox[{"pair", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "->", 
                  RowBox[{
                   RowBox[{"Keys", "[", "places", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"arcs", ",", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Keys", "[", "places", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "->", 
                  RowBox[{"MakeNiceTransitionName", "[", 
                   RowBox[{"routeNumber", ",", " ", 
                    RowBox[{"pair", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], "]"}], ";"}],
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"pair", ",", " ", 
                RowBox[{
                 RowBox[{"Keys", "[", "routeAssociation", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", 
                   RowBox[{"-", "2"}]}], "]"}], "]"}]}], "}"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"finalHoldingTime", " ", "=", 
             RowBox[{"routeAssociation", "[", 
              RowBox[{"[", 
               RowBox[{"Key", "[", 
                RowBox[{"List", "[", 
                 RowBox[{"endStop", ",", " ", 
                  RowBox[{"StringReplace", "[", 
                   RowBox[{"startStop", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"\"\<fwd\>\"", "->", "\"\<rev\>\""}], "}"}]}], 
                   "]"}]}], "]"}], "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"nextStopCumulativeTime", " ", "=", 
             RowBox[{"cumulativeTime", " ", "+", " ", "finalHoldingTime"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"modCumulative", " ", "=", " ", 
             RowBox[{"Mod", "[", 
              RowBox[{"cumulativeTime", ",", " ", "cycleTime"}], "]"}]}], ";",
             "\[IndentingNewLine]", 
            RowBox[{"modNextCumulative", " ", "=", " ", 
             RowBox[{"Mod", "[", 
              RowBox[{"nextStopCumulativeTime", ",", " ", "cycleTime"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"tokens", " ", "=", " ", 
             RowBox[{"Ceiling", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                "finalHoldingTime", " ", "+", " ", "modCumulative", " ", "-", 
                 " ", "modNextCumulative"}], ")"}], "/", "cycleTime"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"places", ",", " ", 
              RowBox[{
               RowBox[{"MakeNicePlaceName", "[", 
                RowBox[{
                "routeNumber", ",", "endStop", ",", " ", "startStop"}], "]"}],
                "->", 
               RowBox[{"List", "[", 
                RowBox[{"finalHoldingTime", ",", " ", "tokens"}], "]"}]}]}], 
             " ", "]"}], ";", " ", 
            RowBox[{"(*", 
             RowBox[{
             "make", " ", "sure", " ", "this", " ", "is", " ", "indeed", " ", 
              "the", " ", "last", " ", "one"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"arcs", ",", " ", 
              RowBox[{
               RowBox[{"MakeNiceTransitionName", "[", 
                RowBox[{"routeNumber", ",", " ", "endStop"}], "]"}], "->", 
               RowBox[{"MakeNicePlaceName", "[", 
                RowBox[{
                "routeNumber", ",", " ", "endStop", ",", " ", "startStop"}], 
                "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"arcs", ",", " ", 
              RowBox[{
               RowBox[{"MakeNicePlaceName", "[", 
                RowBox[{
                "routeNumber", ",", " ", "endStop", ",", " ", "startStop"}], 
                "]"}], "->", 
               RowBox[{"MakeNiceTransitionName", "[", 
                RowBox[{"routeNumber", ",", " ", "startStop"}], "]"}]}]}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"List", "[", 
             RowBox[{"transitions", ",", " ", "arcs", ",", " ", "places"}], 
             "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Synchronization", "[", "routePlaces_", "]"}], " ", ":=", 
         " ", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"arcs", ",", " ", "places", ",", " ", "indexedRoutes"}], 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "returns", " ", "the", " ", "arcs", " ", "and", " ", "places", 
             " ", "between", " ", "routes", " ", "with", " ", "shared", " ", 
             "stops"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"indexedRoutes", " ", "=", " ", 
             RowBox[{"NumberRoutes", "[", "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"arcs", "=", 
             RowBox[{"List", "[", "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"places", "=", 
             RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Do", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Do", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Do", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Do", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"assoc1", " ", "!=", " ", "assoc2"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringDrop", "[", 
                    RowBox[{
                    RowBox[{"key1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"-", "4"}]}], "]"}], "==", 
                    RowBox[{"StringDrop", "[", 
                    RowBox[{
                    RowBox[{"key2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"-", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "add", " ", "arc", " ", "from", " ", "previous", " ", 
                    "stop", " ", "on", " ", "origin", " ", "line", " ", "to", 
                    " ", "new", " ", "place"}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "add", " ", "arc", " ", "from", " ", "new", " ", "place", 
                    " ", "to", " ", "shared", " ", "stop", " ", "on", " ", 
                    "the", " ", "other", " ", "line"}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"placeWeWant", " ", "=", " ", 
                    RowBox[{"MakeNicePlaceName", "[", 
                    RowBox[{"assoc2", ",", " ", 
                    RowBox[{"key2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"key2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"places", ",", " ", 
                    RowBox[{
                    RowBox[{"MakeNicePlaceName", "[", 
                    RowBox[{
                    RowBox[{"StringJoin", "[", 
                    RowBox[{
                    "assoc2", ",", " ", "\"\<->\>\"", ",", " ", "assoc1"}], 
                    "]"}], ",", " ", 
                    RowBox[{"key2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"key1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "->", 
                    RowBox[{"routePlaces", "[", 
                    RowBox[{"[", "placeWeWant", "]"}], "]"}]}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"arcs", ",", " ", 
                    RowBox[{
                    RowBox[{"MakeNiceTransitionName", "[", 
                    RowBox[{"assoc2", ",", 
                    RowBox[{"key2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "->", 
                    RowBox[{
                    RowBox[{"Keys", "[", "places", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"arcs", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Keys", "[", "places", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "->", 
                    RowBox[{"MakeNiceTransitionName", "[", 
                    RowBox[{"assoc1", ",", " ", 
                    RowBox[{"key1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], "]"}], ";"}],
                     ",", "\[IndentingNewLine]", 
                    RowBox[{"Nothing", "[", "]"}]}], "\[IndentingNewLine]", 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Nothing", "[", "]"}]}]}], "\[IndentingNewLine]", 
                    "]"}], ";"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"key2", ",", 
                    RowBox[{"Keys", "[", 
                    RowBox[{"indexedRoutes", "[", 
                    RowBox[{"[", 
                    RowBox[{"Key", "[", "assoc2", "]"}], "]"}], "]"}], 
                    "]"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"key1", ",", 
                    RowBox[{"Keys", "[", 
                    RowBox[{"indexedRoutes", "[", 
                    RowBox[{"[", 
                    RowBox[{"Key", "[", "assoc1", "]"}], "]"}], "]"}], 
                    "]"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"assoc2", ",", 
                  RowBox[{"Keys", "[", "indexedRoutes", "]"}]}], "}"}]}], 
               "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"assoc1", ",", 
                RowBox[{"Keys", "[", "indexedRoutes", "]"}]}], "}"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"List", "[", 
             RowBox[{"arcs", ",", " ", "places"}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"transitions", " ", "=", " ", 
         RowBox[{"List", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"places", " ", "=", " ", 
         RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"arcs", " ", "=", " ", 
         RowBox[{"List", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"find", " ", "transitions"}], ",", " ", "arcs", ",", " ", 
         RowBox[{
         "and", " ", "places", " ", "for", " ", "all", " ", "routes"}]}], " ",
         "*)"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", " ", 
         RowBox[{"i", "<=", 
          RowBox[{"Length", "[", "lineDataFile", "]"}]}], ",", " ", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"temps", "=", " ", 
           RowBox[{"TAPsFromRoute", "[", 
            RowBox[{
             RowBox[{"routeNumbers", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"lineDataFile", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"transitions", " ", "=", " ", 
           RowBox[{"Join", "[", 
            RowBox[{"transitions", ",", " ", 
             RowBox[{"temps", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"arcs", " ", "=", " ", 
           RowBox[{"Join", "[", 
            RowBox[{"arcs", ",", " ", 
             RowBox[{"temps", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"places", " ", "=", " ", 
           RowBox[{"Join", "[", 
            RowBox[{"places", ",", " ", 
             RowBox[{"temps", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "find", " ", "arcs", " ", "and", " ", "places", " ", "between", " ", 
        "routes"}], " ", "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"sync", " ", "=", " ", 
       RowBox[{"Synchronization", "[", "places", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"arcs", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"arcs", ",", " ", 
         RowBox[{"sync", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"places", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"places", ",", " ", 
         RowBox[{"sync", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"List", "[", 
       RowBox[{"transitions", ",", " ", "arcs", ",", " ", "places"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.918281345989832*^9, 3.918281361943011*^9}, {
   3.918881605905086*^9, 3.918881635466922*^9}, {3.918881744503552*^9, 
   3.918881936516221*^9}, {3.9188823807204943`*^9, 3.9188825253133*^9}, {
   3.918882582067436*^9, 3.918882612136265*^9}, {3.918882645142598*^9, 
   3.91888270189203*^9}, {3.918882800226348*^9, 3.918882805210342*^9}, {
   3.918882862051019*^9, 3.918882892503278*^9}, {3.9188830920234137`*^9, 
   3.918883133548925*^9}, {3.918883164343342*^9, 3.918883196605714*^9}, {
   3.918883566919897*^9, 3.918883577602068*^9}, {3.918883662763999*^9, 
   3.91888382923379*^9}, {3.918883901161201*^9, 3.91888413498058*^9}, {
   3.91888425109429*^9, 3.918884402478116*^9}, {3.918884774862331*^9, 
   3.918884985464066*^9}, {3.918885718889193*^9, 3.918885780657655*^9}, {
   3.91888583970784*^9, 3.918886017011883*^9}, {3.918886100655026*^9, 
   3.918886258567081*^9}, {3.9188862908440323`*^9, 3.918886301594866*^9}, {
   3.918886394093027*^9, 3.918886484679677*^9}, {3.918886522910697*^9, 
   3.918886617928458*^9}, {3.918886661172222*^9, 3.91888700476406*^9}, {
   3.918887134388344*^9, 3.918887223847632*^9}, {3.918887274310718*^9, 
   3.918887285323394*^9}, {3.918887325853621*^9, 3.918887354419358*^9}, {
   3.9188875879272003`*^9, 3.918887666264264*^9}, {3.918887697006131*^9, 
   3.918887698265654*^9}, {3.918887758324279*^9, 3.918887899957143*^9}, {
   3.918888371363135*^9, 3.918888437440456*^9}, 3.918888543963311*^9, {
   3.918888729609642*^9, 3.918888736016307*^9}, {3.918888928175333*^9, 
   3.91888895874187*^9}, {3.918889272781378*^9, 3.918889375500405*^9}, {
   3.918889890063659*^9, 3.918889917671831*^9}, {3.9188916591900053`*^9, 
   3.918891713118444*^9}, {3.918892961421401*^9, 3.918892965465005*^9}, {
   3.91889304443329*^9, 3.918893062695462*^9}, {3.918893438460999*^9, 
   3.918893532158224*^9}, {3.918893569139676*^9, 3.9188936057670317`*^9}, {
   3.918893645681926*^9, 3.918893652151368*^9}, {3.918893704105205*^9, 
   3.918893704499288*^9}, {3.918893741238158*^9, 3.918893746359044*^9}, {
   3.918893797714497*^9, 3.9188938825362873`*^9}, {3.918894039936982*^9, 
   3.918894042979788*^9}, {3.918894185409683*^9, 3.918894190153744*^9}, {
   3.918894296315192*^9, 3.918894296436491*^9}, {3.918894349987482*^9, 
   3.918894394697478*^9}, {3.918894425222715*^9, 3.918894556240911*^9}, {
   3.918894586928244*^9, 3.9188946713378572`*^9}, 3.918894777599432*^9, {
   3.918900177047455*^9, 3.918900198388921*^9}, {3.918900294495393*^9, 
   3.918900407883443*^9}, 3.918900495488174*^9, {3.918900543875449*^9, 
   3.918900544266515*^9}, {3.918900576668517*^9, 3.918900637269363*^9}, {
   3.918901063727889*^9, 3.918901090434144*^9}, {3.918901507346434*^9, 
   3.918901539461437*^9}, 3.918902345449935*^9, {3.918903092760992*^9, 
   3.9189030995579453`*^9}, {3.919143419945348*^9, 3.919143426243705*^9}, {
   3.919143998482447*^9, 3.919144068501327*^9}, {3.919144114086277*^9, 
   3.9191441148389378`*^9}, {3.919144150242959*^9, 3.91914426199518*^9}, {
   3.9191447531495657`*^9, 3.919144820981168*^9}, {3.91914534289253*^9, 
   3.919145408673155*^9}, {3.919145694691785*^9, 3.919145697142302*^9}, {
   3.91914592989555*^9, 3.919146056015119*^9}, {3.919146182067106*^9, 
   3.919146282403089*^9}, {3.9191463140017977`*^9, 3.919146346118899*^9}, {
   3.919146428353231*^9, 3.919146429203084*^9}, {3.9191475839229813`*^9, 
   3.919147589369508*^9}, {3.91915056190238*^9, 3.919150563961956*^9}, {
   3.919150657739862*^9, 3.919150700798434*^9}, {3.919161320400388*^9, 
   3.9191613344799*^9}, {3.9191614199847*^9, 3.9191614453790607`*^9}, {
   3.919161517871702*^9, 3.919161522566534*^9}, {3.91917115698694*^9, 
   3.919171333569668*^9}, {3.919171439932519*^9, 3.919171443473894*^9}, {
   3.919172424469658*^9, 3.919172444137088*^9}, {3.919313536433168*^9, 
   3.919313671243149*^9}, {3.919313748054787*^9, 3.919313802967037*^9}, {
   3.919313861816645*^9, 3.91931390760778*^9}, {3.91931401054813*^9, 
   3.919314208143518*^9}, {3.9193142387789516`*^9, 3.919314240722663*^9}, {
   3.919314350764351*^9, 3.919314434378108*^9}, {3.919314478383674*^9, 
   3.9193144913499804`*^9}, {3.919314546233693*^9, 3.919314548008678*^9}, {
   3.919314634418273*^9, 3.919314692806473*^9}, {3.919314761159116*^9, 
   3.919314871828038*^9}, {3.919315131380233*^9, 3.919315235340095*^9}, {
   3.919315309532251*^9, 3.919315395015628*^9}, {3.919315472884239*^9, 
   3.919315476646707*^9}, {3.919315531446719*^9, 3.9193155479482317`*^9}, {
   3.91931586038715*^9, 3.9193159480822*^9}, {3.919316226166889*^9, 
   3.919316252305314*^9}, {3.919316905637457*^9, 3.919317014270286*^9}, {
   3.919317062328614*^9, 3.9193170708398848`*^9}, {3.919317181749385*^9, 
   3.91931719227719*^9}, {3.919317234655504*^9, 3.91931725921272*^9}, {
   3.919317315725014*^9, 3.919317328795407*^9}, {3.919317362966832*^9, 
   3.919317411235908*^9}, {3.919317569677028*^9, 3.9193176218096437`*^9}, {
   3.9193176691397943`*^9, 3.919317752681188*^9}, {3.919317809356702*^9, 
   3.919317890395555*^9}, {3.919317941627357*^9, 3.919317976986409*^9}, 
   3.919318256225928*^9, {3.9193183761174726`*^9, 3.919318434230544*^9}, {
   3.919318477623064*^9, 3.9193186311359863`*^9}, {3.919318711488196*^9, 
   3.919318812489497*^9}, {3.919318879031767*^9, 3.919318889121279*^9}, {
   3.919319264729835*^9, 3.919319272055366*^9}, {3.919319370243577*^9, 
   3.919319428837284*^9}, {3.91931959191731*^9, 3.9193196102593317`*^9}, {
   3.919321032046414*^9, 3.919321057346154*^9}, {3.919321100787902*^9, 
   3.919321180582993*^9}, {3.919321306152005*^9, 3.91932131116194*^9}, {
   3.919322005485457*^9, 3.919322009513264*^9}, {3.91932248586173*^9, 
   3.919322510487463*^9}, {3.919322562520696*^9, 3.919322631256827*^9}, {
   3.9193235789551*^9, 3.9193236225349817`*^9}, {3.9193239002195377`*^9, 
   3.919323906323902*^9}, {3.919323945410009*^9, 3.9193240138228188`*^9}, {
   3.919324094859885*^9, 3.919324139745162*^9}, {3.919324274808967*^9, 
   3.919324299023583*^9}, {3.919327414693527*^9, 3.919327420522676*^9}, {
   3.9193274722881403`*^9, 3.919327527127087*^9}, {3.919327951652159*^9, 
   3.919327952489757*^9}, {3.919328363768676*^9, 3.919328395045211*^9}, {
   3.919328868313669*^9, 3.919328872110182*^9}, {3.9193292441580772`*^9, 
   3.9193293160455627`*^9}, {3.9193294687559013`*^9, 
   3.9193294710070877`*^9}, {3.919329782493694*^9, 3.919329782720089*^9}, {
   3.919329842576055*^9, 3.9193298534157753`*^9}, {3.919330185930188*^9, 
   3.919330225022346*^9}, {3.919330361577376*^9, 3.9193304295135*^9}, {
   3.919330499532861*^9, 3.919330531367519*^9}, {3.919330586368867*^9, 
   3.919330586685766*^9}, {3.919487548438593*^9, 3.919487583389528*^9}, {
   3.919487617108343*^9, 3.919487627151106*^9}, {3.919488325122658*^9, 
   3.919488445744787*^9}, {3.91948857307719*^9, 3.919488602492869*^9}, {
   3.919488634880738*^9, 3.919488654283122*^9}, {3.919488734375037*^9, 
   3.919488926898067*^9}, 3.9194895233557367`*^9, {3.919489795522583*^9, 
   3.919489872567172*^9}, {3.919489911860532*^9, 3.919490048912404*^9}, {
   3.919490483013172*^9, 3.919490497014075*^9}, {3.919490615106224*^9, 
   3.919490615761091*^9}, 3.919490837371902*^9, {3.919490970360271*^9, 
   3.919491010960063*^9}, {3.919491072926681*^9, 3.919491189594105*^9}, {
   3.9194912744014053`*^9, 3.919491294202282*^9}, {3.919491333184883*^9, 
   3.919491354851413*^9}, 3.919491462641711*^9, {3.9194915446375*^9, 
   3.919491556629923*^9}, {3.919491782034833*^9, 3.919492073824708*^9}, {
   3.9194922168693666`*^9, 3.919492218598996*^9}, {3.919492345917898*^9, 
   3.919492427271826*^9}, {3.919492483732775*^9, 3.919492493479694*^9}, {
   3.919492535374349*^9, 3.9194925670578938`*^9}, {3.919492686591429*^9, 
   3.919492700077314*^9}, {3.91949291284822*^9, 3.919492983928931*^9}, {
   3.919493038187201*^9, 3.919493217612912*^9}, {3.9194932749966297`*^9, 
   3.919493296830275*^9}, {3.919493385082778*^9, 3.919493796093096*^9}, {
   3.91949386149522*^9, 3.9194939384914637`*^9}, {3.919493983897587*^9, 
   3.919494001016691*^9}, {3.919494101869809*^9, 3.9194941602501173`*^9}, 
   3.919494203249074*^9, {3.919594345805231*^9, 3.919594384579912*^9}, {
   3.919594456285148*^9, 3.9195944797601776`*^9}, {3.919595506930455*^9, 
   3.9195955073304386`*^9}, {3.919595618150463*^9, 3.919595631785663*^9}, {
   3.919595680750461*^9, 3.919595684930183*^9}, 3.919746087698808*^9, {
   3.919746476841961*^9, 3.919746478475717*^9}, {3.919749151934211*^9, 
   3.919749152196478*^9}, {3.919922654213284*^9, 3.9199226688797283`*^9}, {
   3.920528055933029*^9, 3.9205280570386314`*^9}, 3.920528110735628*^9, {
   3.920531640888201*^9, 3.9205316417475405`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"33914b71-3dd3-4a58-ac7f-ae396980de99"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatrixFromPetriNet", "[", 
    RowBox[{"transitions_", ",", " ", "arcs_", ",", " ", "places_"}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "AMatrices", ",", " ", "GetPlaceBetween", ",", " ", "A0Star", ",", " ", 
       "MatrixABlocks", ",", " ", "ATwiddle"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"reccurence", " ", "relation"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"GetPlaceBetween", "[", 
        RowBox[{"t1_", ",", " ", "t2_"}], "]"}], " ", ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "p", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"GetTransitionRoute", "[", "t1", "]"}], "==", 
             RowBox[{"GetTransitionRoute", "[", "t2", "]"}]}], ",", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"p", " ", "=", 
             RowBox[{"MakeNicePlaceName", "[", 
              RowBox[{
               RowBox[{"GetTransitionRoute", "[", "t1", "]"}], ",", " ", 
               RowBox[{"GetTransitionStop", "[", "t1", "]"}], ",", " ", 
               RowBox[{"GetTransitionStop", "[", "t2", "]"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"p", " ", "=", " ", 
             RowBox[{"MakeNicePlaceName", "[", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{
                 RowBox[{"GetTransitionRoute", "[", "t1", "]"}], ",", " ", 
                 "\"\<->\>\"", ",", " ", 
                 RowBox[{"GetTransitionRoute", "[", "t2", "]"}]}], "]"}], ",",
                " ", 
               RowBox[{"GetTransitionStop", "[", "t1", "]"}], ",", " ", 
               RowBox[{"GetTransitionStop", "[", "t2", "]"}]}], "]"}]}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "p"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AMatrices", "[", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "maxTokens", ",", " ", "p", ",", " ", "row", ",", " ", "matrix", 
           ",", " ", "matrices"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"maxTokens", " ", "=", " ", "0"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ">", "maxTokens"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"maxTokens", "=", 
               RowBox[{"x", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Nothing", "[", "]"}]}], "\[IndentingNewLine]", "]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "places"}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"matrices", " ", "=", " ", 
           RowBox[{"List", "[", "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"m", "=", "0"}], ",", " ", 
            RowBox[{"m", "<=", "maxTokens"}], ",", " ", 
            RowBox[{"m", "++"}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"matrix", " ", "=", " ", 
              RowBox[{"List", "[", "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"row", " ", "=", 
                 RowBox[{"List", "[", "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"Do", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"p", " ", "=", 
                    RowBox[{"GetPlaceBetween", "[", 
                    RowBox[{"j", ",", "i"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", "places", "]"}], ",", " ", "p"}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"p", " ", "=", " ", 
                    RowBox[{"places", "[", 
                    RowBox[{"[", "p", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", "m"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"row", ",", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"p", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "/", 
                    TemplateBox[{
                    InterpretationBox["\[InvisibleSpace]", 1], "\"min\"", 
                    "minutes", "\"Minutes\""},
                    "Quantity"]}], ")"}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"row", ",", " ", "eps"}], " ", "]"}]}], 
                    "\[IndentingNewLine]", "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"row", ",", " ", "eps"}], " ", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", " ", "transitions"}], "}"}]}], "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"matrix", ",", " ", "row"}], "]"}], ";"}], 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"i", ",", " ", "transitions"}], "}"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"matrices", ",", " ", "matrix"}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "matrices"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"A0Star", "[", "A0_", "]"}], " ", ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "R", ",", " ", "knownPowers", ",", "powerAndKnown", ",", " ", 
           "mp"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"R", " ", "=", 
           RowBox[{"EMatrix", "[", 
            RowBox[{"Length", "[", "A0", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"knownPowers", "=", 
           RowBox[{"Association", "[", 
            RowBox[{"1", "->", "A0"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"l", "=", "1"}], ",", " ", 
            RowBox[{"l", "<=", 
             RowBox[{"Length", "[", "transitions", "]"}]}], ",", " ", 
            RowBox[{"l", "=", 
             RowBox[{"l", "+", "1"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"powerAndKnown", "=", " ", 
              RowBox[{"mpowerDynamic", "[", 
               RowBox[{"A0", ",", " ", "l", ",", " ", "knownPowers"}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"mp", " ", "=", " ", 
              RowBox[{"powerAndKnown", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"knownPowers", " ", "=", 
              RowBox[{"powerAndKnown", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{"Keys", "[", "knownPowers", "]"}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"R", "=", 
              RowBox[{"mplus", "[", 
               RowBox[{"R", ",", "mp"}], "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "R"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MatrixABlocks", "[", " ", 
        RowBox[{"AMatrixList_", ",", " ", "A0S_"}], "]"}], " ", ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"s", ",", " ", "blocks", ",", " ", "a"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"blocks", " ", "=", " ", 
           RowBox[{"List", "[", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "=", " ", 
              RowBox[{"mtimes", "[", 
               RowBox[{"A0S", ",", " ", "A"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"blocks", ",", "a"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"A", ",", " ", 
              RowBox[{"Drop", "[", 
               RowBox[{"AMatrixList", ",", " ", "1"}], "]"}]}], "}"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "blocks"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ATwiddle", "[", "blocks_", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "atwid", ",", " ", "flatBlocks", ",", " ", "row", ",", " ", "rows", 
           ",", " ", "blockLen"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "blocks", "]"}], "==", "1"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"atwid", " ", "=", " ", 
             RowBox[{"blocks", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"blockLen", " ", "=", " ", 
              RowBox[{"Length", "[", 
               RowBox[{"blocks", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"flatBlocks", " ", "=", " ", 
              RowBox[{"ArrayFlatten", "[", 
               RowBox[{"{", "blocks", "}"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"rows", "=", "flatBlocks"}], ";", "\[IndentingNewLine]", 
             RowBox[{"For", " ", "[", 
              RowBox[{
               RowBox[{"i", "=", "1"}], ",", " ", 
               RowBox[{"i", "<=", 
                RowBox[{
                 RowBox[{"Length", "[", "blocks", "]"}], "-", "1"}]}], ",", 
               RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"row", " ", "=", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"EpsilonMatrix", "[", "blockLen", "]"}], ",", " ", 
                   RowBox[{"Length", "[", "blocks", "]"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"row", " ", "=", 
                 RowBox[{"ReplacePart", "[", 
                  RowBox[{"row", ",", " ", 
                   RowBox[{"i", "->", 
                    RowBox[{"EMatrix", "[", "blockLen", "]"}]}]}], "]"}]}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"rows", " ", "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{"rows", ",", " ", 
                   RowBox[{"ArrayFlatten", "[", 
                    RowBox[{"{", "row", "}"}], "]"}], ",", " ", "1"}], 
                  "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"atwid", " ", "=", "rows"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "atwid"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Comp", "[", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "matrixList", ",", " ", "A0S", ",", " ", "matrixABlocks", ",", " ", 
           "matrix"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"matrixList", " ", "=", " ", 
           RowBox[{"AMatrices", "[", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"A0S", " ", "=", " ", 
           RowBox[{"A0Star", "[", 
            RowBox[{"matrixList", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"matrixABlocks", " ", "=", " ", 
           RowBox[{"MatrixABlocks", "[", 
            RowBox[{"matrixList", ",", " ", "A0S"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"matrix", " ", "=", " ", 
           RowBox[{"ATwiddle", "[", "matrixABlocks", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "matrix"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Comp", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.918281345989832*^9, 3.918281361943011*^9}, {
   3.918881605905086*^9, 3.918881635466922*^9}, {3.918881744503552*^9, 
   3.918881936516221*^9}, {3.9188823807204943`*^9, 3.9188825253133*^9}, {
   3.918882582067436*^9, 3.918882612136265*^9}, {3.918882645142598*^9, 
   3.91888270189203*^9}, {3.918882800226348*^9, 3.918882805210342*^9}, {
   3.918882862051019*^9, 3.918882892503278*^9}, {3.9188830920234137`*^9, 
   3.918883133548925*^9}, {3.918883164343342*^9, 3.918883196605714*^9}, {
   3.918883566919897*^9, 3.918883577602068*^9}, {3.918883662763999*^9, 
   3.91888382923379*^9}, {3.918883901161201*^9, 3.91888413498058*^9}, {
   3.91888425109429*^9, 3.918884402478116*^9}, {3.918884774862331*^9, 
   3.918884985464066*^9}, {3.918885718889193*^9, 3.918885780657655*^9}, {
   3.91888583970784*^9, 3.918886017011883*^9}, {3.918886100655026*^9, 
   3.918886258567081*^9}, {3.9188862908440323`*^9, 3.918886301594866*^9}, {
   3.918886394093027*^9, 3.918886484679677*^9}, {3.918886522910697*^9, 
   3.918886617928458*^9}, {3.918886661172222*^9, 3.91888700476406*^9}, {
   3.918887134388344*^9, 3.918887223847632*^9}, {3.918887274310718*^9, 
   3.918887285323394*^9}, {3.918887325853621*^9, 3.918887354419358*^9}, {
   3.9188875879272003`*^9, 3.918887666264264*^9}, {3.918887697006131*^9, 
   3.918887698265654*^9}, {3.918887758324279*^9, 3.918887899957143*^9}, {
   3.918888371363135*^9, 3.918888437440456*^9}, 3.918888543963311*^9, {
   3.918888729609642*^9, 3.918888736016307*^9}, {3.918888928175333*^9, 
   3.91888895874187*^9}, {3.918889272781378*^9, 3.918889375500405*^9}, {
   3.918889890063659*^9, 3.918889917671831*^9}, {3.9188916591900053`*^9, 
   3.918891713118444*^9}, {3.918892961421401*^9, 3.918892965465005*^9}, {
   3.91889304443329*^9, 3.918893062695462*^9}, {3.918893438460999*^9, 
   3.918893532158224*^9}, {3.918893569139676*^9, 3.9188936057670317`*^9}, {
   3.918893645681926*^9, 3.918893652151368*^9}, {3.918893704105205*^9, 
   3.918893704499288*^9}, {3.918893741238158*^9, 3.918893746359044*^9}, {
   3.918893797714497*^9, 3.9188938825362873`*^9}, {3.918894039936982*^9, 
   3.918894042979788*^9}, {3.918894185409683*^9, 3.918894190153744*^9}, {
   3.918894296315192*^9, 3.918894296436491*^9}, {3.918894349987482*^9, 
   3.918894394697478*^9}, {3.918894425222715*^9, 3.918894556240911*^9}, {
   3.918894586928244*^9, 3.9188946713378572`*^9}, 3.918894777599432*^9, {
   3.918900177047455*^9, 3.918900198388921*^9}, {3.918900294495393*^9, 
   3.918900407883443*^9}, 3.918900495488174*^9, {3.918900543875449*^9, 
   3.918900544266515*^9}, {3.918900576668517*^9, 3.918900637269363*^9}, {
   3.918901063727889*^9, 3.918901090434144*^9}, {3.918901507346434*^9, 
   3.918901539461437*^9}, 3.918902345449935*^9, {3.918903092760992*^9, 
   3.9189030995579453`*^9}, {3.919143419945348*^9, 3.919143426243705*^9}, {
   3.919143998482447*^9, 3.919144068501327*^9}, {3.919144114086277*^9, 
   3.9191441148389378`*^9}, {3.919144150242959*^9, 3.91914426199518*^9}, {
   3.9191447531495657`*^9, 3.919144820981168*^9}, {3.91914534289253*^9, 
   3.919145408673155*^9}, {3.919145694691785*^9, 3.919145697142302*^9}, {
   3.91914592989555*^9, 3.919146056015119*^9}, {3.919146182067106*^9, 
   3.919146282403089*^9}, {3.9191463140017977`*^9, 3.919146346118899*^9}, {
   3.919146428353231*^9, 3.919146429203084*^9}, {3.9191475839229813`*^9, 
   3.919147589369508*^9}, {3.91915056190238*^9, 3.919150563961956*^9}, {
   3.919150657739862*^9, 3.919150700798434*^9}, {3.919161320400388*^9, 
   3.9191613344799*^9}, {3.9191614199847*^9, 3.9191614453790607`*^9}, {
   3.919161517871702*^9, 3.919161522566534*^9}, {3.91917115698694*^9, 
   3.919171333569668*^9}, {3.919171439932519*^9, 3.919171443473894*^9}, {
   3.919172424469658*^9, 3.919172444137088*^9}, {3.919313536433168*^9, 
   3.919313671243149*^9}, {3.919313748054787*^9, 3.919313802967037*^9}, {
   3.919313861816645*^9, 3.91931390760778*^9}, {3.91931401054813*^9, 
   3.919314208143518*^9}, {3.9193142387789516`*^9, 3.919314240722663*^9}, {
   3.919314350764351*^9, 3.919314434378108*^9}, {3.919314478383674*^9, 
   3.9193144913499804`*^9}, {3.919314546233693*^9, 3.919314548008678*^9}, {
   3.919314634418273*^9, 3.919314692806473*^9}, {3.919314761159116*^9, 
   3.919314871828038*^9}, {3.919315131380233*^9, 3.919315235340095*^9}, {
   3.919315309532251*^9, 3.919315395015628*^9}, {3.919315472884239*^9, 
   3.919315476646707*^9}, {3.919315531446719*^9, 3.9193155479482317`*^9}, {
   3.91931586038715*^9, 3.9193159480822*^9}, {3.919316226166889*^9, 
   3.919316252305314*^9}, {3.919316905637457*^9, 3.919317014270286*^9}, {
   3.919317062328614*^9, 3.9193170708398848`*^9}, {3.919317181749385*^9, 
   3.91931719227719*^9}, {3.919317234655504*^9, 3.91931725921272*^9}, {
   3.919317315725014*^9, 3.919317328795407*^9}, {3.919317362966832*^9, 
   3.919317411235908*^9}, {3.919317569677028*^9, 3.9193176218096437`*^9}, {
   3.9193176691397943`*^9, 3.919317752681188*^9}, {3.919317809356702*^9, 
   3.919317890395555*^9}, {3.919317941627357*^9, 3.919317976986409*^9}, 
   3.919318256225928*^9, {3.9193183761174726`*^9, 3.919318434230544*^9}, {
   3.919318477623064*^9, 3.9193186311359863`*^9}, {3.919318711488196*^9, 
   3.919318812489497*^9}, {3.919318879031767*^9, 3.919318889121279*^9}, {
   3.919319264729835*^9, 3.919319272055366*^9}, {3.919319370243577*^9, 
   3.919319428837284*^9}, {3.91931959191731*^9, 3.9193196102593317`*^9}, {
   3.919321032046414*^9, 3.919321057346154*^9}, {3.919321100787902*^9, 
   3.919321180582993*^9}, {3.919321306152005*^9, 3.91932131116194*^9}, {
   3.919322005485457*^9, 3.919322009513264*^9}, {3.91932248586173*^9, 
   3.919322510487463*^9}, {3.919322562520696*^9, 3.919322631256827*^9}, {
   3.9193235789551*^9, 3.9193236225349817`*^9}, {3.9193239002195377`*^9, 
   3.919323906323902*^9}, {3.919323945410009*^9, 3.9193240138228188`*^9}, {
   3.919324094859885*^9, 3.919324139745162*^9}, {3.919324274808967*^9, 
   3.919324299023583*^9}, {3.919327414693527*^9, 3.919327420522676*^9}, {
   3.9193274722881403`*^9, 3.919327527127087*^9}, {3.919327951652159*^9, 
   3.919327952489757*^9}, {3.919328363768676*^9, 3.919328395045211*^9}, {
   3.919328868313669*^9, 3.919328872110182*^9}, {3.9193292441580772`*^9, 
   3.9193293160455627`*^9}, {3.9193294687559013`*^9, 
   3.9193294710070877`*^9}, {3.919329782493694*^9, 3.919329782720089*^9}, {
   3.919329842576055*^9, 3.9193298534157753`*^9}, {3.919330185930188*^9, 
   3.919330225022346*^9}, {3.919330361577376*^9, 3.9193304295135*^9}, {
   3.919330499532861*^9, 3.919330531367519*^9}, {3.919330586368867*^9, 
   3.919330586685766*^9}, {3.919487548438593*^9, 3.919487583389528*^9}, {
   3.919487617108343*^9, 3.919487627151106*^9}, {3.919488325122658*^9, 
   3.919488445744787*^9}, {3.91948857307719*^9, 3.919488602492869*^9}, {
   3.919488634880738*^9, 3.919488654283122*^9}, {3.919488734375037*^9, 
   3.919488926898067*^9}, 3.9194895233557367`*^9, {3.919489795522583*^9, 
   3.919489872567172*^9}, {3.919489911860532*^9, 3.919490048912404*^9}, {
   3.919490483013172*^9, 3.919490497014075*^9}, {3.919490615106224*^9, 
   3.919490615761091*^9}, 3.919490837371902*^9, {3.919490970360271*^9, 
   3.919491010960063*^9}, {3.919491072926681*^9, 3.919491189594105*^9}, {
   3.9194912744014053`*^9, 3.919491294202282*^9}, {3.919491333184883*^9, 
   3.919491354851413*^9}, 3.919491462641711*^9, {3.9194915446375*^9, 
   3.919491556629923*^9}, {3.919491782034833*^9, 3.919492073824708*^9}, {
   3.9194922168693666`*^9, 3.919492218598996*^9}, {3.919492345917898*^9, 
   3.919492427271826*^9}, {3.919492483732775*^9, 3.919492493479694*^9}, {
   3.919492535374349*^9, 3.9194925670578938`*^9}, {3.919492686591429*^9, 
   3.919492700077314*^9}, {3.91949291284822*^9, 3.919492983928931*^9}, {
   3.919493038187201*^9, 3.919493217612912*^9}, {3.9194932749966297`*^9, 
   3.919493296830275*^9}, {3.919493385082778*^9, 3.919493796093096*^9}, {
   3.91949386149522*^9, 3.9194939384914637`*^9}, {3.919493983897587*^9, 
   3.919494001016691*^9}, {3.919494101869809*^9, 3.9194941602501173`*^9}, 
   3.919494203249074*^9, {3.919494233604208*^9, 3.919494248538657*^9}, {
   3.919494383245863*^9, 3.919494437463883*^9}, {3.919494553557859*^9, 
   3.919494562903681*^9}, {3.919494598032014*^9, 3.91949464243145*^9}, {
   3.919494923235499*^9, 3.919494942373361*^9}, {3.919495033068474*^9, 
   3.919495044991243*^9}, {3.919495147333183*^9, 3.919495150904206*^9}, {
   3.919495235254917*^9, 3.919495433488278*^9}, {3.919495527530986*^9, 
   3.919495545360607*^9}, {3.919495617179883*^9, 3.919495656632201*^9}, {
   3.919495738779344*^9, 3.919495835329358*^9}, {3.919495873040614*^9, 
   3.919495907158828*^9}, {3.919495937245057*^9, 3.919495937819347*^9}, {
   3.91949599671809*^9, 3.91949600809408*^9}, 3.919496423723591*^9, {
   3.919496790166953*^9, 3.919496797582415*^9}, {3.9194968563256617`*^9, 
   3.919496930848726*^9}, {3.919497028327667*^9, 3.919497135917254*^9}, {
   3.9194973095594273`*^9, 3.919497315043921*^9}, {3.91949856912638*^9, 
   3.91949857038785*^9}, {3.919499547881133*^9, 3.91949964583591*^9}, {
   3.919499713645664*^9, 3.9194997172796087`*^9}, 3.919505091849586*^9, 
   3.919505132099183*^9, {3.919506215231273*^9, 3.91950623900924*^9}, {
   3.919511305313635*^9, 3.919511322808977*^9}, {3.919511389488254*^9, 
   3.919511415605364*^9}, {3.91951148299585*^9, 3.919511527545541*^9}, {
   3.919523943187969*^9, 3.9195239491368427`*^9}, {3.9195240164767857`*^9, 
   3.9195241120016203`*^9}, {3.919524169145835*^9, 3.919524191938045*^9}, {
   3.919524517116688*^9, 3.919524532629541*^9}, {3.91952458669074*^9, 
   3.919524609797068*^9}, {3.919524639886833*^9, 3.919524687234016*^9}, {
   3.919524999030775*^9, 3.919525077852127*^9}, {3.919525110398541*^9, 
   3.91952537006323*^9}, {3.919526806130752*^9, 3.919526836847938*^9}, {
   3.919527307594103*^9, 3.919527311579375*^9}, {3.919527606580323*^9, 
   3.919527739518744*^9}, {3.919527997982744*^9, 3.919528095161223*^9}, {
   3.919528146290517*^9, 3.919528180990605*^9}, {3.919528243199782*^9, 
   3.919528276257812*^9}, {3.919528319341759*^9, 3.919528324257594*^9}, {
   3.9195288325358067`*^9, 3.919528863020362*^9}, {3.919529559078876*^9, 
   3.919529586009369*^9}, {3.919529640152119*^9, 3.919529641977597*^9}, {
   3.91952969097213*^9, 3.919529703139577*^9}, {3.919529747918141*^9, 
   3.91952977706657*^9}, {3.919529813602439*^9, 3.919529814748859*^9}, {
   3.9195301218231277`*^9, 3.919530142696947*^9}, {3.919530327770343*^9, 
   3.919530360993807*^9}, {3.919530634532168*^9, 3.919530644255699*^9}, {
   3.919530702736836*^9, 3.919530710693929*^9}, {3.919530754414137*^9, 
   3.91953076193005*^9}, {3.9195308541051702`*^9, 3.919530912131133*^9}, {
   3.919530944676609*^9, 3.919530949449605*^9}, {3.919530985120966*^9, 
   3.919530985698864*^9}, {3.91953105414546*^9, 3.919531145862751*^9}, {
   3.919531208205941*^9, 3.91953134148872*^9}, {3.919531389832323*^9, 
   3.919531390194648*^9}, {3.919531427895797*^9, 3.919531429106823*^9}, {
   3.919531461756806*^9, 3.919531475461718*^9}, {3.9195315134207077`*^9, 
   3.919531557907741*^9}, {3.9195315881323*^9, 3.919531644846009*^9}, {
   3.919531681773988*^9, 3.919531821644451*^9}, {3.9195319083538*^9, 
   3.919531943271571*^9}, {3.9195319988588343`*^9, 3.919532039856286*^9}, {
   3.919532174915844*^9, 3.9195322125511093`*^9}, {3.919532463969647*^9, 
   3.919532551219114*^9}, {3.919532583048718*^9, 3.919532621673068*^9}, {
   3.919532889385044*^9, 3.919532891406495*^9}, {3.919533033308262*^9, 
   3.919533049018129*^9}, {3.9197463622262774`*^9, 3.919746383948469*^9}, {
   3.919746414300474*^9, 3.919746418791093*^9}, 3.919746467707425*^9, {
   3.919746583566062*^9, 3.91974660725866*^9}, {3.919746660747291*^9, 
   3.919746664439478*^9}, {3.919747234697389*^9, 3.9197472378826694`*^9}, {
   3.919747344304624*^9, 3.919747351270265*^9}, {3.919747443486484*^9, 
   3.919747443736477*^9}, {3.9197475815393753`*^9, 3.919747585411579*^9}, {
   3.919755202622253*^9, 3.91975533750498*^9}, {3.919755410862952*^9, 
   3.9197554573179007`*^9}, {3.919755574500015*^9, 3.919755616847527*^9}, {
   3.919755682941701*^9, 3.919755687132125*^9}, {3.919755780577745*^9, 
   3.919755812358238*^9}, {3.919755992750871*^9, 3.919756005904902*^9}, {
   3.919920865029785*^9, 3.919920900507421*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"53a60471-21ed-4214-8cce-2f2fe72a4d6f"],

Cell[BoxData[
 RowBox[{"EndPackage", "[", "]"}]], "Input",
 CellChangeTimes->{{3.920541490831419*^9, 
  3.9205414977445717`*^9}},ExpressionUUID->"33a15957-5d2c-7549-b48a-\
b116da376a28"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"b1", " ", "=", " ", 
   RowBox[{"MergeDirections", "[", 
    RowBox[{
    "\"\<1_Danestone_RGU.txt\>\"", ",", " ", "\"\<1_RGU_Danestone.txt\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b2", " ", "=", " ", 
   RowBox[{"MergeDirections", "[", 
    RowBox[{
    "\"\<2_Ashwood_RGU.txt\>\"", ",", " ", "\"\<2_RGU_Ashwood.txt\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b3", " ", "=", " ", 
   RowBox[{"MergeDirections", "[", 
    RowBox[{
    "\"\<3_Cove_Mastrick.txt\>\"", ",", " ", "\"\<3_Mastrick_Cove.txt\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b11", " ", "=", " ", 
   RowBox[{"MergeDirections", "[", 
    RowBox[{
    "\"\<11_Northfield_Woodend.txt\>\"", ",", " ", 
     "\"\<11_Woodend_Northfield.txt\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b12", " ", "=", " ", 
   RowBox[{"MergeDirections", "[", 
    RowBox[{
    "\"\<12_Heathryfold_Torry.txt\>\"", ",", " ", 
     "\"\<12_Torry_Heathryfold.txt\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b13", " ", "=", " ", 
   RowBox[{"MergeDirections", "[", 
    RowBox[{
    "\"\<13_Golf_Links_Scatterburn.txt\>\"", ",", " ", 
     "\"\<13_Scatterburn _Golf_Links.txt\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b15", " ", "=", " ", 
   RowBox[{"MergeDirections", "[", 
    RowBox[{
    "\"\<15_Balnagask_Circle_Countesswells.txt\>\"", ",", " ", 
     "\"\<15_Countesswells_Balnagask_Circle.txt\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b17", " ", "=", " ", 
   RowBox[{"MergeDirections", "[", 
    RowBox[{
    "\"\<17_Dyce_Faulds_Gate.txt\>\"", ",", " ", 
     "\"\<17_Faulds_Gate_Dyce.txt\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b18", " ", "=", " ", 
   RowBox[{"MergeDirections", "[", 
    RowBox[{
    "\"\<18_Dyce_Redmoss.txt\>\"", ",", " ", "\"\<18_Redmoss_Dyce.txt\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b19", " ", "=", " ", 
   RowBox[{"MergeDirections", "[", 
    RowBox[{
    "\"\<19_Culter_Tillydrone.txt\>\"", ",", " ", 
     "\"\<19_Tillydrone_Culter.txt\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b20", " ", "=", " ", 
   RowBox[{"MergeDirections", "[", 
    RowBox[{
    "\"\<20_Guild_str_Hillhead.txt\>\"", ",", " ", 
     "\"\<20_Hillhead_Guild_str.txt\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b23", " ", "=", " ", 
   RowBox[{"MergeDirections", "[", 
    RowBox[{
    "\"\<23_Raasay_Gardens_Heathryfold.txt\>\"", ",", "  ", 
     "\"\<23_Heathryfold_Raasay_Gardens.txt\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.918881938718025*^9, 3.9188819391035767`*^9}, {
  3.918889927614497*^9, 3.918889943138098*^9}, {3.918891840600931*^9, 
  3.918891873011689*^9}, {3.918892474082038*^9, 3.918892553638226*^9}, {
  3.91889259481057*^9, 3.918892623190405*^9}, {3.918892664754293*^9, 
  3.9188926983829803`*^9}, {3.918892765540331*^9, 3.918892813002934*^9}, {
  3.918892993109445*^9, 3.918893019840701*^9}, {3.918893070728305*^9, 
  3.918893081498898*^9}, {3.919142388823834*^9, 3.919142463734351*^9}, {
  3.919143468662496*^9, 3.919143513207972*^9}, {3.919327615704384*^9, 
  3.9193276347285423`*^9}, {3.919593647960436*^9, 3.919593649910211*^9}, {
  3.9195937956700554`*^9, 3.919593799570095*^9}, {3.9197493521292963`*^9, 
  3.919749908102152*^9}, {3.919749940892562*^9, 3.919750042202932*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"d29b8eaf-6fc7-465d-8c07-d4deebd9050c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TAPs", "=", 
   RowBox[{"Algorithm821", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b11", ",", " ", "b19"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<11\>\"", ",", " ", "\"\<19\>\""}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.919143524343219*^9, 3.9191435269059258`*^9}, {
  3.91914362750814*^9, 3.919143628863799*^9}, {3.919327643555482*^9, 
  3.919327647450429*^9}, {3.919494301518539*^9, 3.919494302369569*^9}, {
  3.919494333726595*^9, 3.919494335097644*^9}, {3.919593184064991*^9, 
  3.9195931857601566`*^9}, {3.919595652840889*^9, 3.919595656650711*^9}, {
  3.919750013144064*^9, 3.919750025855893*^9}, {3.919750060705534*^9, 
  3.919750140862575*^9}, {3.920524901176239*^9, 3.92052492551178*^9}, {
  3.920527973563944*^9, 3.9205279779501553`*^9}, {3.920532733229784*^9, 
  3.9205327570901737`*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"7105971c-bd6b-45fd-b020-bf88947505d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mtx", " ", "=", 
   RowBox[{"MatrixFromPetriNet", "[", 
    RowBox[{
     RowBox[{"TAPs", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{"TAPs", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{"TAPs", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9194942894266787`*^9, 3.91949429282014*^9}, {
  3.919494326180277*^9, 3.9194943559149857`*^9}, {3.919496264988657*^9, 
  3.919496300296264*^9}, {3.919496432673815*^9, 3.919496453549397*^9}, {
  3.919496594592849*^9, 3.9194966255203953`*^9}, {3.919496761965094*^9, 
  3.919496763019958*^9}, {3.919498051571865*^9, 3.9194981327093563`*^9}, {
  3.919508244112339*^9, 3.9195082468988943`*^9}, {3.919746175530218*^9, 
  3.919746212861611*^9}, {3.919746274940846*^9, 3.919746275630108*^9}, {
  3.9197472541401253`*^9, 3.919747258297194*^9}, {3.91974777100824*^9, 
  3.919747771355571*^9}, {3.919750145271286*^9, 3.919750147505025*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"3357212c-45f0-45ac-8456-2a2248117a40"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", "1", "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.920532759840168*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"e5fa8890-2dc0-9042-9922-def363db2a8c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2"}], "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.920532759871416*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"b0f888a9-eb56-4742-9423-2461254bc76c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.920532759887039*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"32464ada-3cb4-a241-9681-527613204106"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.9205327599807873`*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"b86af08b-db11-834b-99a2-24d95750d4b7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.9205327599807873`*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"77d727e6-6e74-074b-ba67-e117b63c54b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.9205327599964123`*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"f2cd3471-d478-2a49-af84-733a191f7d66"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
  "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.9205327599964123`*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"d7828342-de2c-b74e-9dcc-1de0c8104547"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8"}],
   "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.920532760012039*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"711fe796-174d-cf47-a6d2-bd998ccac092"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9"}], "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.9205327600432873`*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"379d59a8-070c-bc4b-8890-9868bf1ba815"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.9205327600432873`*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"b5ce7618-5fed-c24d-aea4-348caac0d157"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11"}], "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.920532760058916*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"5d249924-182b-6547-9825-6585defcc04f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12"}], "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.920532760105793*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"96f0c0f3-daf4-da4a-a95e-b8f47bcb0564"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13"}], "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.9205327601214104`*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"ef95c077-d7d0-b743-8afb-ccb742cb76be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14"}], 
  "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.920532760168291*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"240a91d9-821b-5a4e-ad78-031e238fc237"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", 
   "15"}], "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.920532760168291*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"f2be520d-b898-1947-8d25-d50e2dcc4812"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16"}], "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.920532760215164*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"c976548f-416a-ab40-81a6-681ff131b2af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17"}], "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.9205327602307873`*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"a9dfb511-00e9-b042-9d21-9fdd4fdc2b9f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18"}], "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.9205327602307873`*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"d50acaaf-b552-ca40-ae47-33795e176d4b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19"}], "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.920532760277668*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"cba5f8b7-1d47-bb4d-b0a6-eaa3d2f19796"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20"}], "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.920532760277668*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"107d0bb1-e1c3-dd41-b3cb-e05b5c1754d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21"}], 
  "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.920532760324543*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"8b6419ec-efaf-2640-84cc-faca60a1ec68"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", 
   "22"}], "}"}]], "Print",
 CellChangeTimes->{3.919920934736066*^9, 3.920524930230522*^9, 
  3.9205279806783276`*^9, 3.9205280672286663`*^9, 3.9205281204386826`*^9, 
  3.920531663699526*^9, 3.92053276034017*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"cbc1ab4e-d411-2941-b2a7-8a864ff33b60"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", " ", 
      "\"\<matrix11-19.txt\>\""}], "}"}], "]"}], ",", " ", "mtx"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.919921988787415*^9, 3.9199220213674717`*^9}, {
  3.919922063314292*^9, 3.91992206715763*^9}, {3.9205249364114246`*^9, 
  3.9205249372082996`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"5fea0236-69c4-487b-a1ba-c66d54007b62"],

Cell[BoxData["\<\"E:\\\\Dokumentumok\\\\Uni\\\\2023-II\\\\MX4553\\\\Project\\\
\\maxplusbus\\\\matrix11-19.txt\"\>"], "Output",
 CellChangeTimes->{3.920524937833315*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"977d603c-657d-724f-9ba1-afbe9a6f0b1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "mtx", "]"}]], "Input",
 CellChangeTimes->{{3.91992213900768*^9, 3.919922162272305*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"1fd6504c-0431-48aa-9616-f9cb0a286c37"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"22", ",", "22"}], "}"}]], "Output",
 CellChangeTimes->{3.919921990860517*^9, 3.919922028058937*^9, 
  3.919922070621665*^9, 3.919922163403915*^9, 3.9205249402707863`*^9, 
  3.9205282398936825`*^9, 3.920532764027666*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"fd546921-fb19-ff42-9eaf-9297d4d4afc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"TAPs", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.919593236905199*^9, 3.919593361009959*^9}, {
  3.91959570572032*^9, 3.919595706390435*^9}, {3.919595775885319*^9, 
  3.919595779700304*^9}, {3.919596158095503*^9, 3.919596158290358*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"b0b63b28-a141-9642-b1c6-c7a0807ac358"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "q:11:Northfield_Terminus_end", 
       "p:11:Northfield_Terminus_end+Hawthorn_Crescent_fwd", 
       "q:11:Hawthorn_Crescent_fwd", 
       "p:11:Hawthorn_Crescent_fwd+Berryden_Retail_Park_fwd", 
       "q:11:Berryden_Retail_Park_fwd", 
       "p:11:Berryden_Retail_Park_fwd+Adelphi_fwd", "q:11:Adelphi_fwd", 
       "p:11:Adelphi_fwd+Queen's_Cross_fwd", "q:11:Queen's_Cross_fwd", 
       "p:11:Queen's_Cross_fwd+Woodend_end", "q:11:Woodend_end", 
       "p:11:Woodend_end+Queen's_Cross_rev", "q:11:Queen's_Cross_rev", 
       "p:11:Queen's_Cross_rev+Broad_Street_rev", "q:11:Broad_Street_rev", 
       "p:11:Broad_Street_rev+Berryden_Retail_Park_rev", 
       "q:11:Berryden_Retail_Park_rev", 
       "p:11:Berryden_Retail_Park_rev+Northfield_Terminus_end", 
       "q:19:Culter_end", "p:19:Culter_end+Milton_of_Murtle_fwd", 
       "q:19:Milton_of_Murtle_fwd", 
       "p:19:Milton_of_Murtle_fwd+Mannofield_Church_fwd", 
       "q:19:Mannofield_Church_fwd", 
       "p:19:Mannofield_Church_fwd+Holburn_Junction_fwd", 
       "q:19:Holburn_Junction_fwd", 
       "p:19:Holburn_Junction_fwd+Broad_Street_fwd", "q:19:Broad_Street_fwd", 
       "p:19:Broad_Street_fwd+Sir_Duncan_Rice_Library_fwd", 
       "q:19:Sir_Duncan_Rice_Library_fwd", 
       "p:19:Sir_Duncan_Rice_Library_fwd+St_George's_Church_fwd", 
       "q:19:St_George's_Church_fwd", 
       "p:19:St_George's_Church_fwd+Tillydrone_end", "q:19:Tillydrone_end", 
       "p:19:Tillydrone_end+Sir_Duncan_Rice_Library_rev", 
       "q:19:Sir_Duncan_Rice_Library_rev", 
       "p:19:Sir_Duncan_Rice_Library_rev+Broad_Street_rev", 
       "q:19:Broad_Street_rev", "p:19:Broad_Street_rev+Holburn_Junction_rev", 
       "q:19:Holburn_Junction_rev", 
       "p:19:Holburn_Junction_rev+Mannofield_Church_rev", 
       "q:19:Mannofield_Church_rev", 
       "p:19:Mannofield_Church_rev+Cairn_Road_rev", "q:19:Cairn_Road_rev", 
       "p:19:Cairn_Road_rev+Culter_end", 
       "p:19->11:Holburn_Junction_fwd+Broad_Street_rev", 
       "p:19->11:Sir_Duncan_Rice_Library_rev+Broad_Street_rev", 
       "p:11->19:Queen's_Cross_rev+Broad_Street_fwd", 
       "p:11->19:Queen's_Cross_rev+Broad_Street_rev"}, {{{1, 2}, {2, 3}, {3, 
       4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 9}, {9, 10}, {10, 11}, {11, 
       12}, {12, 13}, {13, 14}, {14, 15}, {15, 16}, {16, 17}, {17, 18}, {18, 
       1}, {19, 20}, {20, 21}, {21, 22}, {22, 23}, {23, 24}, {24, 25}, {25, 
       26}, {26, 27}, {27, 28}, {28, 29}, {29, 30}, {30, 31}, {31, 32}, {32, 
       33}, {33, 34}, {34, 35}, {35, 36}, {36, 37}, {37, 38}, {38, 39}, {39, 
       40}, {40, 41}, {41, 42}, {42, 43}, {43, 44}, {44, 19}, {25, 45}, {45, 
       15}, {35, 46}, {46, 15}, {13, 47}, {47, 27}, {13, 48}, {48, 37}}, 
       Null}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJwBEQPu/CFib1JlAgAAADAAAAACAAAA6YgX4ULVKUB0Y5DdTLQNQOSsHjEG
qytA/7omHuZ5C0CiRXlI8SktQPaSPI4v4wdABifdrTkYLkA08eBTJtoCQIb4
B/X1IS5AJg5mCEU3+j8nThImVTotQPz/drrH8vA/DN+IuWe6K0CEPmFsBBbo
P/4sbuet6ylAuHPAjXaH5j9sYLmqI/QnQFgod8TuhOs/aZxQzB7lJUD9yZ3h
qvHyPxwWeK2exSNAo7DHnLhc+j8e/CE8hpUhQArc83Q/6gFA1p1fM/eiHkDA
5wKk8KsHQBSchphlWSBA9ZNwm8SqCUDath/eE3YgQMQfI+yFvw1Awk5de/wQ
I0Bsx+I1u7YOQJdDCNcTfiVAmORublEeD0Du4aw5nMEnQJyg+QpP2Q5A2EoZ
iEam4T8AkeLPKkjKP/xqP2OwV/U/AAAAAAAAAACUBTAoq9sBQOD/ExNqELc/
eMB9OHlnCUCo//qlAonaP53lwsbKixBAWIbl9yRz7T/IMA+DQWoUQGqeWxWm
SPk/9yJVC5RJGEAXm/YVRSADQIyIRCvq8hdAhYpR7It/CUAuJmDZDJ0YQOdq
AYZ4TxBAAU4InvHZFkD33d3uIY8UQNQgeLwftRVAr08V0jhyGED7x3IqB1cV
QICOJ/pN5htAai7sjt84FkDCtKzZJI8eQPccE61ZjhhASoDL6RruHkDM4/JR
rWIaQNLXfP/TvBxAGY6PPpNeG0CMIZ99qFkZQMTle/zRxRtA7OapCRhEFUAX
IEESQa4YQM6cfKyqyBJAdH/0b1D3FUDI/T3uETwPQJ6NVJaS3hBAKBezR0bF
DUBwua2iIGkIQOlWGftG6AtAxPXh2wYNAEB3brPXBU4JQAhrQHedsfE/Tio9
tO3ZBUCQm6PEXtfZP59EIgYVVQFAAAAAAAAAAAA/cADsPoT3P4C8yewuhqY/
CFF0F7Cd5z9lTxkvg7gcQISEQY5stAdAq+CGL7TBHkAgo8/zR3cSQO1QSZwf
zBtAzhsQbKZtDEDCzJ5J6y0aQIu9lCj4EAtAfj1Sug==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.013353330622986142`], 
         ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8,
           9}, {9, 10}, {10, 11}, {11, 12}, {12, 13}, {13, 14}, {13, 47}, {13,
           48}, {14, 15}, {15, 16}, {16, 17}, {17, 18}, {18, 1}, {19, 20}, {
          20, 21}, {21, 22}, {22, 23}, {23, 24}, {24, 25}, {25, 26}, {25, 
          45}, {26, 27}, {27, 28}, {28, 29}, {29, 30}, {30, 31}, {31, 32}, {
          32, 33}, {33, 34}, {34, 35}, {35, 36}, {35, 46}, {36, 37}, {37, 
          38}, {38, 39}, {39, 40}, {40, 41}, {41, 42}, {42, 43}, {43, 44}, {
          44, 19}, {45, 15}, {46, 15}, {47, 27}, {48, 37}}, 
          0.08047427232521058]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.08047427232521058], DiskBox[2, 0.08047427232521058], 
         DiskBox[3, 0.08047427232521058], DiskBox[4, 0.08047427232521058], 
         DiskBox[5, 0.08047427232521058], DiskBox[6, 0.08047427232521058], 
         DiskBox[7, 0.08047427232521058], DiskBox[8, 0.08047427232521058], 
         DiskBox[9, 0.08047427232521058], DiskBox[10, 0.08047427232521058], 
         DiskBox[11, 0.08047427232521058], DiskBox[12, 0.08047427232521058], 
         DiskBox[13, 0.08047427232521058], DiskBox[14, 0.08047427232521058], 
         DiskBox[15, 0.08047427232521058], DiskBox[16, 0.08047427232521058], 
         DiskBox[17, 0.08047427232521058], DiskBox[18, 0.08047427232521058], 
         DiskBox[19, 0.08047427232521058], DiskBox[20, 0.08047427232521058], 
         DiskBox[21, 0.08047427232521058], DiskBox[22, 0.08047427232521058], 
         DiskBox[23, 0.08047427232521058], DiskBox[24, 0.08047427232521058], 
         DiskBox[25, 0.08047427232521058], DiskBox[26, 0.08047427232521058], 
         DiskBox[27, 0.08047427232521058], DiskBox[28, 0.08047427232521058], 
         DiskBox[29, 0.08047427232521058], DiskBox[30, 0.08047427232521058], 
         DiskBox[31, 0.08047427232521058], DiskBox[32, 0.08047427232521058], 
         DiskBox[33, 0.08047427232521058], DiskBox[34, 0.08047427232521058], 
         DiskBox[35, 0.08047427232521058], DiskBox[36, 0.08047427232521058], 
         DiskBox[37, 0.08047427232521058], DiskBox[38, 0.08047427232521058], 
         DiskBox[39, 0.08047427232521058], DiskBox[40, 0.08047427232521058], 
         DiskBox[41, 0.08047427232521058], DiskBox[42, 0.08047427232521058], 
         DiskBox[43, 0.08047427232521058], DiskBox[44, 0.08047427232521058], 
         DiskBox[45, 0.08047427232521058], DiskBox[46, 0.08047427232521058], 
         DiskBox[47, 0.08047427232521058], 
         DiskBox[48, 0.08047427232521058]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.91959614387554*^9, 3.919596159230694*^9}, 
   3.919597462325634*^9, 3.919652420269397*^9, 3.919652462239388*^9, 
   3.919652822894083*^9, 3.9197462069065866`*^9, 3.919747255281595*^9, 
   3.919747599391094*^9, 3.919747821390608*^9, 3.9199218999770403`*^9, 
   3.92052494295829*^9, 3.9205316688245335`*^9, 3.920532768090168*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"630766d0-dd43-1948-8f72-c87a55400cce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"placesList", "=", 
   RowBox[{"Keys", "[", 
    RowBox[{"TAPs", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transitionsList", "=", 
   RowBox[{"TAPs", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"arcsList", "=", 
   RowBox[{"TAPs", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialMarkings", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Values", "[", 
     RowBox[{"TAPs", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"petriNet", "=", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<MakePetriNet\>\"", "]"}], "[", 
    RowBox[{
    "placesList", ",", "transitionsList", ",", "arcsList", ",", " ", 
     "initialMarkings"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"petriNet", "[", "\"\<LabeledGraph\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.919652386984436*^9, 3.919652474969497*^9}, {
  3.919652513214515*^9, 3.919652514589462*^9}, {3.91965258754912*^9, 
  3.919652590969509*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"db57295f-66af-fd4a-881f-8c61b60a14e3"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "p:11:Northfield_Terminus_end+Hawthorn_Crescent_fwd", 
       "p:11:Hawthorn_Crescent_fwd+Berryden_Retail_Park_fwd", 
       "p:11:Berryden_Retail_Park_fwd+Adelphi_fwd", 
       "p:11:Adelphi_fwd+Queen's_Cross_fwd", 
       "p:11:Queen's_Cross_fwd+Woodend_end", 
       "p:11:Woodend_end+Queen's_Cross_rev", 
       "p:11:Queen's_Cross_rev+Broad_Street_rev", 
       "p:11:Broad_Street_rev+Berryden_Retail_Park_rev", 
       "p:11:Berryden_Retail_Park_rev+Northfield_Terminus_end", 
       "p:19:Culter_end+Milton_of_Murtle_fwd", 
       "p:19:Milton_of_Murtle_fwd+Mannofield_Church_fwd", 
       "p:19:Mannofield_Church_fwd+Holburn_Junction_fwd", 
       "p:19:Holburn_Junction_fwd+Broad_Street_fwd", 
       "p:19:Broad_Street_fwd+Sir_Duncan_Rice_Library_fwd", 
       "p:19:Sir_Duncan_Rice_Library_fwd+St_George's_Church_fwd", 
       "p:19:St_George's_Church_fwd+Tillydrone_end", 
       "p:19:Tillydrone_end+Sir_Duncan_Rice_Library_rev", 
       "p:19:Sir_Duncan_Rice_Library_rev+Broad_Street_rev", 
       "p:19:Broad_Street_rev+Holburn_Junction_rev", 
       "p:19:Holburn_Junction_rev+Mannofield_Church_rev", 
       "p:19:Mannofield_Church_rev+Cairn_Road_rev", 
       "p:19:Cairn_Road_rev+Culter_end", 
       "p:19->11:Holburn_Junction_fwd+Broad_Street_rev", 
       "p:19->11:Sir_Duncan_Rice_Library_rev+Broad_Street_rev", 
       "p:11->19:Queen's_Cross_rev+Broad_Street_fwd", 
       "p:11->19:Queen's_Cross_rev+Broad_Street_rev", 
       "q:11:Northfield_Terminus_end", "q:11:Hawthorn_Crescent_fwd", 
       "q:11:Berryden_Retail_Park_fwd", "q:11:Adelphi_fwd", 
       "q:11:Queen's_Cross_fwd", "q:11:Woodend_end", "q:11:Queen's_Cross_rev",
        "q:11:Broad_Street_rev", "q:11:Berryden_Retail_Park_rev", 
       "q:19:Culter_end", "q:19:Milton_of_Murtle_fwd", 
       "q:19:Mannofield_Church_fwd", "q:19:Holburn_Junction_fwd", 
       "q:19:Broad_Street_fwd", "q:19:Sir_Duncan_Rice_Library_fwd", 
       "q:19:St_George's_Church_fwd", "q:19:Tillydrone_end", 
       "q:19:Sir_Duncan_Rice_Library_rev", "q:19:Broad_Street_rev", 
       "q:19:Holburn_Junction_rev", "q:19:Mannofield_Church_rev", 
       "q:19:Cairn_Road_rev"}, {{{27, 1}, {1, 28}, {28, 2}, {2, 29}, {29, 
       3}, {3, 30}, {30, 4}, {4, 31}, {31, 5}, {5, 32}, {32, 6}, {6, 33}, {33,
        7}, {7, 34}, {34, 8}, {8, 35}, {35, 9}, {9, 27}, {36, 10}, {10, 37}, {
       37, 11}, {11, 38}, {38, 12}, {12, 39}, {39, 13}, {13, 40}, {40, 14}, {
       14, 41}, {41, 15}, {15, 42}, {42, 16}, {16, 43}, {43, 17}, {17, 44}, {
       44, 18}, {18, 45}, {45, 19}, {19, 46}, {46, 20}, {20, 47}, {47, 21}, {
       21, 48}, {48, 22}, {22, 36}, {39, 23}, {23, 34}, {44, 24}, {24, 34}, {
       33, 25}, {25, 40}, {33, 26}, {26, 45}}, Null}, {Epilog -> {
         Text["", {1.2473346808719699`, 3.443451559406322}], 
         Text["", {0.019689591032370224`, 2.4241252621821543`}], 
         Text["", {0.4587658066740081, 1.141002437943606}], 
         Text["", {2.122665850856902, 0.7385396786130523}], 
         Text["", {4.152656660728075, 1.1243208751844864`}], 
         Text["", {6.338150337275548, 2.104204708094648}], 
         Text[
         "\[FilledSmallCircle]", {6.976580554010786, 3.0268754291409112`}], 
         Text["", {5.59703229665087, 3.681540332498612}], 
         Text["", {3.2259654698219142`, 3.782907921307639}], 
         Text["", {13.895686451715457`, 0.}], 
         Text[
         "\[FilledSmallCircle]", {12.040915118168485`, 0.2765767342343666}], 
         Text["", {10.074535054130777`, 1.3473540167316826`}], 
         Text["", {9.189467611781769, 2.8889658106608738`}], 
         Text["\[FilledSmallCircle]", {9.518088845473713, 4.805734400441581}], 
         Text["", {9.907407083816802, 6.646584358088683}], 
         Text["", {9.119782145836933, 7.488805834041594}], 
         Text["", {8.336650398042316, 6.1574437883214195`}], 
         Text[
         "\[FilledSmallCircle]", {8.955973321880418, 4.5540824292919915`}], 
         Text["", {10.935409951607834`, 3.67523416254541}], 
         Text["", {13.175362099428632`, 3.267830882533448}], 
         Text["", {14.787163895301262`, 2.3144338852655677`}], 
         Text[
         "\[FilledSmallCircle]", {15.14589133674008, 0.8590976342071652}], 
         Text["", {7.963347279216269, 2.7314262362888404`}], 
         Text["\[FilledSmallCircle]", {7.449153657610533, 4.437287560636171}], 
         Text[
         "\[FilledSmallCircle]", {8.229197249974831, 3.2853134764925676`}], 
         Text[
         "\[FilledSmallCircle]", {8.599381405338978, 3.2599569817106593`}], 
         Text["", {2.1735070293308336`, 3.683542625080853}], 
         Text["", {0.4895183292923564, 3.02888993941544}], 
         Text["", {0., 1.7110553848765961`}], 
         Text["", {1.213427283206376, 0.8188380884465136}], 
         Text["", {3.1116617154566413`, 0.8470987192882151}], 
         Text["", {5.229429443400548, 1.544780510948793}], 
         Text["", {7.487446694603259, 2.7930496884922023`}], 
         Text["", {6.911216626223574, 3.525915550735843}], 
         Text["", {4.369543227871036, 3.7729725209806606`}], 
         Text["", {14.663554898467972`, 0.27485139232992584`}], 
         Text["", {12.995754577135452`, 0.016805011387868607`}], 
         Text["", {11.061975727484512`, 0.7297354126832176}], 
         Text["", {9.0837310727445, 2.1336639063713654`}], 
         Text["", {9.047073921141372, 3.7626401040489306`}], 
         Text["", {9.809062850768193, 5.775797993639069}], 
         Text["", {9.698867028098753, 7.33215474636348}], 
         Text["", {8.62744777513903, 6.979966059487254}], 
         Text["", {8.192635201307205, 5.147303706602372}], 
         Text["", {9.65114563043101, 3.7973048631089785`}], 
         Text["", {12.113654374735814`, 3.5105377685400696`}], 
         Text["", {14.080821953252338`, 2.861233795978278}], 
         Text["", {15.181266996080687`, 1.6035205167857476`}]}, 
       GraphLayout -> {"Dimension" -> 2}, VertexLabels -> {"Name"}, 
       VertexShapeFunction -> {
        "p:11:Adelphi_fwd+Queen's_Cross_fwd" -> "Circle", 
         "p:11:Hawthorn_Crescent_fwd+Berryden_Retail_Park_fwd" -> "Circle", 
         "q:11:Queen's_Cross_fwd" -> "Square", 
         "p:19:Milton_of_Murtle_fwd+Mannofield_Church_fwd" -> "Circle", 
         "q:19:Milton_of_Murtle_fwd" -> "Square", 
         "p:19:Mannofield_Church_fwd+Holburn_Junction_fwd" -> "Circle", 
         "p:11:Berryden_Retail_Park_rev+Northfield_Terminus_end" -> "Circle", 
         "p:11->19:Queen's_Cross_rev+Broad_Street_rev" -> "Circle", 
         "q:19:Sir_Duncan_Rice_Library_fwd" -> "Square", 
         "p:19:Sir_Duncan_Rice_Library_fwd+St_George's_Church_fwd" -> 
         "Circle", "p:11:Broad_Street_rev+Berryden_Retail_Park_rev" -> 
         "Circle", "q:19:Mannofield_Church_fwd" -> "Square", 
         "p:11:Queen's_Cross_rev+Broad_Street_rev" -> "Circle", 
         "q:11:Woodend_end" -> "Square", 
         "p:19:Broad_Street_rev+Holburn_Junction_rev" -> "Circle", 
         "q:19:Broad_Street_fwd" -> "Square", "q:19:St_George's_Church_fwd" -> 
         "Square", "p:19:Culter_end+Milton_of_Murtle_fwd" -> "Circle", 
         "q:11:Broad_Street_rev" -> "Square", "q:19:Cairn_Road_rev" -> 
         "Square", "q:11:Queen's_Cross_rev" -> "Square", 
         "p:11:Northfield_Terminus_end+Hawthorn_Crescent_fwd" -> "Circle", 
         "q:19:Mannofield_Church_rev" -> "Square", "q:19:Culter_end" -> 
         "Square", "p:19:Holburn_Junction_fwd+Broad_Street_fwd" -> "Circle", 
         "q:11:Berryden_Retail_Park_rev" -> "Square", 
         "p:19:Broad_Street_fwd+Sir_Duncan_Rice_Library_fwd" -> "Circle", 
         "p:19:Cairn_Road_rev+Culter_end" -> "Circle", 
         "q:19:Holburn_Junction_rev" -> "Square", 
         "p:19->11:Sir_Duncan_Rice_Library_rev+Broad_Street_rev" -> "Circle", 
         "p:11:Woodend_end+Queen's_Cross_rev" -> "Circle", 
         "q:19:Sir_Duncan_Rice_Library_rev" -> "Square", 
         "q:19:Holburn_Junction_fwd" -> "Square", 
         "q:11:Hawthorn_Crescent_fwd" -> "Square", 
         "p:11:Queen's_Cross_fwd+Woodend_end" -> "Circle", 
         "p:11->19:Queen's_Cross_rev+Broad_Street_fwd" -> "Circle", 
         "p:19->11:Holburn_Junction_fwd+Broad_Street_rev" -> "Circle", 
         "p:19:Sir_Duncan_Rice_Library_rev+Broad_Street_rev" -> "Circle", 
         "p:19:Holburn_Junction_rev+Mannofield_Church_rev" -> "Circle", 
         "p:19:Mannofield_Church_rev+Cairn_Road_rev" -> "Circle", 
         "q:19:Tillydrone_end" -> "Square", 
         "p:19:Tillydrone_end+Sir_Duncan_Rice_Library_rev" -> "Circle", 
         "q:11:Adelphi_fwd" -> "Square", "q:19:Broad_Street_rev" -> "Square", 
         "p:11:Berryden_Retail_Park_fwd+Adelphi_fwd" -> "Circle", 
         "q:11:Berryden_Retail_Park_fwd" -> "Square", 
         "q:11:Northfield_Terminus_end" -> "Square", 
         "p:19:St_George's_Church_fwd+Tillydrone_end" -> "Circle"}, 
       VertexSize -> {Large}, 
       VertexStyle -> {
        "q:19:Culter_end" -> GrayLevel[0.85], 
         "p:11->19:Queen's_Cross_rev+Broad_Street_fwd" -> 
         RGBColor[0.87, 0.94, 1], "p:11:Woodend_end+Queen's_Cross_rev" -> 
         RGBColor[0.87, 0.94, 1], "q:19:Holburn_Junction_fwd" -> 
         GrayLevel[0.85], "p:11:Queen's_Cross_rev+Broad_Street_rev" -> 
         RGBColor[0.87, 0.94, 1], 
         "p:19:St_George's_Church_fwd+Tillydrone_end" -> 
         RGBColor[0.87, 0.94, 1], 
         "p:19->11:Holburn_Junction_fwd+Broad_Street_rev" -> 
         RGBColor[0.87, 0.94, 1], "q:19:Holburn_Junction_rev" -> 
         GrayLevel[0.85], "q:19:Sir_Duncan_Rice_Library_rev" -> 
         GrayLevel[0.85], "q:11:Broad_Street_rev" -> GrayLevel[0.85], 
         "q:11:Woodend_end" -> GrayLevel[0.85], 
         "q:11:Berryden_Retail_Park_fwd" -> GrayLevel[0.85], 
         "p:11:Berryden_Retail_Park_rev+Northfield_Terminus_end" -> 
         RGBColor[0.87, 0.94, 1], "q:11:Northfield_Terminus_end" -> 
         GrayLevel[0.85], "q:11:Queen's_Cross_rev" -> GrayLevel[0.85], 
         "q:19:Cairn_Road_rev" -> GrayLevel[0.85], "q:19:Broad_Street_fwd" -> 
         GrayLevel[0.85], "p:19:Milton_of_Murtle_fwd+Mannofield_Church_fwd" -> 
         RGBColor[0.87, 0.94, 1], "q:19:Mannofield_Church_fwd" -> 
         GrayLevel[0.85], "q:11:Queen's_Cross_fwd" -> GrayLevel[0.85], 
         "q:11:Adelphi_fwd" -> GrayLevel[0.85], "q:19:St_George's_Church_fwd" -> 
         GrayLevel[0.85], "p:19:Tillydrone_end+Sir_Duncan_Rice_Library_rev" -> 
         RGBColor[0.87, 0.94, 1], "p:11:Berryden_Retail_Park_fwd+Adelphi_fwd" -> 
         RGBColor[0.87, 0.94, 1], 
         "p:19:Holburn_Junction_fwd+Broad_Street_fwd" -> 
         RGBColor[0.87, 0.94, 1], 
         "p:19:Broad_Street_rev+Holburn_Junction_rev" -> 
         RGBColor[0.87, 0.94, 1], "q:11:Hawthorn_Crescent_fwd" -> 
         GrayLevel[0.85], "p:19:Mannofield_Church_rev+Cairn_Road_rev" -> 
         RGBColor[0.87, 0.94, 1], 
         "p:11:Broad_Street_rev+Berryden_Retail_Park_rev" -> 
         RGBColor[0.87, 0.94, 1], 
         "p:19:Sir_Duncan_Rice_Library_rev+Broad_Street_rev" -> 
         RGBColor[0.87, 0.94, 1], "q:19:Sir_Duncan_Rice_Library_fwd" -> 
         GrayLevel[0.85], "q:19:Tillydrone_end" -> GrayLevel[0.85], 
         "p:19:Holburn_Junction_rev+Mannofield_Church_rev" -> 
         RGBColor[0.87, 0.94, 1], "q:19:Broad_Street_rev" -> GrayLevel[0.85], 
         "p:19:Broad_Street_fwd+Sir_Duncan_Rice_Library_fwd" -> 
         RGBColor[0.87, 0.94, 1], 
         "p:11->19:Queen's_Cross_rev+Broad_Street_rev" -> 
         RGBColor[0.87, 0.94, 1], "p:11:Adelphi_fwd+Queen's_Cross_fwd" -> 
         RGBColor[0.87, 0.94, 1], "p:19:Culter_end+Milton_of_Murtle_fwd" -> 
         RGBColor[0.87, 0.94, 1], "p:19:Cairn_Road_rev+Culter_end" -> 
         RGBColor[0.87, 0.94, 1], 
         "p:19:Mannofield_Church_fwd+Holburn_Junction_fwd" -> 
         RGBColor[0.87, 0.94, 1], "q:19:Milton_of_Murtle_fwd" -> 
         GrayLevel[0.85], 
         "p:11:Northfield_Terminus_end+Hawthorn_Crescent_fwd" -> 
         RGBColor[0.87, 0.94, 1], "p:11:Queen's_Cross_fwd+Woodend_end" -> 
         RGBColor[0.87, 0.94, 1], 
         "p:19->11:Sir_Duncan_Rice_Library_rev+Broad_Street_rev" -> 
         RGBColor[0.87, 0.94, 1], "q:19:Mannofield_Church_rev" -> 
         GrayLevel[0.85], "q:11:Berryden_Retail_Park_rev" -> GrayLevel[0.85], 
         "p:19:Sir_Duncan_Rice_Library_fwd+St_George's_Church_fwd" -> 
         RGBColor[0.87, 0.94, 1], 
         "p:11:Hawthorn_Crescent_fwd+Berryden_Retail_Park_fwd" -> 
         RGBColor[0.87, 0.94, 1]}, 
       VertexWeight -> {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 
        0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.013297796634327683`], 
        ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGAwAWImKP6if8NU9Otne1PREyEGPdwOAbOPrXcJuW+vdYJ9
mZY1hwPDbwuxJs0p9tOuCZ+cncLswAAFzzmq51Qn/Lb/wMbjlB1z1175z86j
3Y6f7K8oiO8yyvpsLyAV/P618Sv7WYrnrC1+MzhwKJz7Jrvouf2H8weernvC
4TCn8NfRPOnX9s/iRdmD5gg4SHNdemT+96N9wJSA3vevRBx04x8cyd7+wz72
9T8RlyhJh74bWu6ZVxkcuErfW6p+lnWozUrM14pgc1Drnrqb5YW0g/l5znIu
cw6HnnNLfogulXaw+hRmJmzK43BE1Dg/JlnMIebJ96zTxbwOQSssujKrBB1a
eiaZ8+jzOdR5fP997BynQ11snlWqM5/Dnwsuy8OTGR3y1BWNnpbzOqjqKmdN
P6UN97epu3335b+aDg1V7pahphPtNZ70XP4kouHwYr/487zNF+2NkkI9dsur
OWxZ3CbyL/K5fcbp9FJNNRWHz5/uix7u+2pfaTjtzD0tJQdrrSuJ+wQZHZia
JJ4xJio5TE9PkJ4lw+7wbPp6ISkJJYcTAjx8jyX5HE6Uvf/gxKnsMGmRT4GQ
pbBDyauMGtt5yg6n3nKfypISdzjq67Vy+gVlh6ikA6ZS06Qc1tzXfnYxVdmh
K25zvEKIrEMY+z3REFslh1emti2dX2QdxMO3XHVwVHRwPMBkWfNa2uFJ7+OC
2DUKDixGxz9aLJRwqIk4LLIwScHBYX/miWvTRBzCll0KLX2p6LAmOSUp0VzI
4Y7L8a9JvsoOKV/t4x8m8DmksczlfXdP1UHVSEv7YRqvg7vw3+cGVhoOn1mi
Lk8R5XH4w7iE/2SkloPbjq6WFhUuB3bOPXWJmjoOtnXx3eceszkkXEpVZZ+s
62B2aP3Lr81MDjWsEuznY/Qcvn1RUGRd8dOeUfmDyyYvPQeDLfFBu2pf27dw
7SjfG6zrEOAd4q01/aL90k3dW8tvyTsoJiz6//UmK0b8z3be+f7daaC/W/P9
T+wXxJC3+NwZHlmq4KCnNjUvyIMLI/xvtc6We2Sk6JDUXBacIsKF4X/09DLc
8hO6PHp4ocujhxel+RE9vumdH9Hl0dPbYM+v6PLo+WGg8zMAwKOmeQ==
         "], 0.074210312143338]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{1.2473346808719699`, 3.443451559406322}, 
           0.074210312143338]}, 
         InsetBox["\<\"p:11:Northfield_Terminus_end+Hawthorn_Crescent_fwd\"\>\
", Offset[{2, 2}, {1.3215449930153078, 3.5176618715496604}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{0.019689591032370224`, 2.4241252621821543`}, 
           0.074210312143338]}, 
         InsetBox["\<\"p:11:Hawthorn_Crescent_fwd+Berryden_Retail_Park_fwd\"\>\
", Offset[{2, 2}, {0.09389990317570822, 2.4983355743254925}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{0.4587658066740081, 1.141002437943606}, 
           0.074210312143338]}, 
         InsetBox["\<\"p:11:Berryden_Retail_Park_fwd+Adelphi_fwd\"\>", 
          Offset[{2, 2}, {0.5329761188173461, 1.2152127500869438}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{2.122665850856902, 0.7385396786130523}, 
           0.074210312143338]}, 
         InsetBox["\<\"p:11:Adelphi_fwd+Queen's_Cross_fwd\"\>", 
          Offset[{2, 2}, {2.19687616300024, 0.8127499907563902}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{4.152656660728075, 1.1243208751844864`}, 
           0.074210312143338]}, 
         InsetBox["\<\"p:11:Queen's_Cross_fwd+Woodend_end\"\>", 
          Offset[{2, 2}, {4.226866972871413, 1.1985311873278244}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{6.338150337275548, 2.104204708094648}, 0.074210312143338]},
          InsetBox["\<\"p:11:Woodend_end+Queen's_Cross_rev\"\>", 
          Offset[{2, 2}, {6.412360649418885, 2.178415020237986}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{6.976580554010786, 3.0268754291409112`}, 
           0.074210312143338]}, 
         InsetBox["\<\"p:11:Queen's_Cross_rev+Broad_Street_rev\"\>", 
          Offset[{2, 2}, {7.050790866154124, 3.1010857412842494}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{5.59703229665087, 3.681540332498612}, 0.074210312143338]}, 
         InsetBox["\<\"p:11:Broad_Street_rev+Berryden_Retail_Park_rev\"\>", 
          Offset[{2, 2}, {5.671242608794207, 3.75575064464195}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{3.2259654698219142`, 3.782907921307639}, 
           0.074210312143338]}, 
         InsetBox["\<\"p:11:Berryden_Retail_Park_rev+Northfield_Terminus_end\"\
\>", Offset[{2, 2}, {3.3001757819652524, 3.857118233450977}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{13.895686451715457`, 0.}, 0.074210312143338]}, 
         InsetBox["\<\"p:19:Culter_end+Milton_of_Murtle_fwd\"\>", Offset[{2, 2},
           {13.969896763858795, 0.074210312143338}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{12.040915118168485`, 0.2765767342343666}, 
           0.074210312143338]}, 
         InsetBox["\<\"p:19:Milton_of_Murtle_fwd+Mannofield_Church_fwd\"\>", 
          Offset[{2, 2}, {12.115125430311823, 0.3507870463777046}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{10.074535054130777`, 1.3473540167316826`}, 
           0.074210312143338]}, 
         InsetBox["\<\"p:19:Mannofield_Church_fwd+Holburn_Junction_fwd\"\>", 
          Offset[{2, 2}, {10.148745366274115, 1.4215643288750206}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{9.189467611781769, 2.8889658106608738`}, 
           0.074210312143338]}, 
         InsetBox["\<\"p:19:Holburn_Junction_fwd+Broad_Street_fwd\"\>", 
          Offset[{2, 2}, {9.263677923925107, 2.963176122804212}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{9.518088845473713, 4.805734400441581}, 0.074210312143338]},
          InsetBox["\<\"p:19:Broad_Street_fwd+Sir_Duncan_Rice_Library_fwd\"\>\
", Offset[{2, 2}, {9.59229915761705, 4.879944712584919}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{9.907407083816802, 6.646584358088683}, 0.074210312143338]},
          InsetBox["\<\"p:19:Sir_Duncan_Rice_Library_fwd+St_George's_Church_\
fwd\"\>", Offset[{2, 2}, {9.98161739596014, 6.720794670232021}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{9.119782145836933, 7.488805834041594}, 0.074210312143338]},
          InsetBox["\<\"p:19:St_George's_Church_fwd+Tillydrone_end\"\>", 
          Offset[{2, 2}, {9.19399245798027, 7.563016146184932}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{8.336650398042316, 6.1574437883214195`}, 
           0.074210312143338]}, 
         InsetBox["\<\"p:19:Tillydrone_end+Sir_Duncan_Rice_Library_rev\"\>", 
          Offset[{2, 2}, {8.410860710185654, 6.231654100464757}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{8.955973321880418, 4.5540824292919915`}, 
           0.074210312143338]}, 
         InsetBox["\<\"p:19:Sir_Duncan_Rice_Library_rev+Broad_Street_rev\"\>",
           Offset[{2, 2}, {9.030183634023755, 4.628292741435329}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{10.935409951607834`, 3.67523416254541}, 
           0.074210312143338]}, 
         InsetBox["\<\"p:19:Broad_Street_rev+Holburn_Junction_rev\"\>", 
          Offset[{2, 2}, {11.009620263751172, 3.7494444746887483}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{13.175362099428632`, 3.267830882533448}, 
           0.074210312143338]}, 
         InsetBox["\<\"p:19:Holburn_Junction_rev+Mannofield_Church_rev\"\>", 
          Offset[{2, 2}, {13.24957241157197, 3.3420411946767863}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{14.787163895301262`, 2.3144338852655677`}, 
           0.074210312143338]}, 
         InsetBox["\<\"p:19:Mannofield_Church_rev+Cairn_Road_rev\"\>", 
          Offset[{2, 2}, {14.8613742074446, 2.388644197408906}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{15.14589133674008, 0.8590976342071652}, 
           0.074210312143338]}, 
         InsetBox["\<\"p:19:Cairn_Road_rev+Culter_end\"\>", 
          Offset[{2, 2}, {15.220101648883418, 0.9333079463505032}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{7.963347279216269, 2.7314262362888404`}, 
           0.074210312143338]}, 
         InsetBox["\<\"p:19->11:Holburn_Junction_fwd+Broad_Street_rev\"\>", 
          Offset[{2, 2}, {8.037557591359608, 2.8056365484321786}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{7.449153657610533, 4.437287560636171}, 0.074210312143338]},
          InsetBox["\<\"p:19->11:Sir_Duncan_Rice_Library_rev+Broad_Street_rev\
\"\>", Offset[{2, 2}, {7.523363969753871, 4.5114978727795085}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{8.229197249974831, 3.2853134764925676`}, 
           0.074210312143338]}, 
         InsetBox["\<\"p:11->19:Queen's_Cross_rev+Broad_Street_fwd\"\>", 
          Offset[{2, 2}, {8.303407562118169, 3.3595237886359057}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], 
          DiskBox[{8.599381405338978, 3.2599569817106593`}, 
           0.074210312143338]}, 
         InsetBox["\<\"p:11->19:Queen's_Cross_rev+Broad_Street_rev\"\>", 
          Offset[{2, 2}, {8.673591717482315, 3.3341672938539975}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{2.1080273377802228, 3.618062933530242}, \
{2.2389867208814445, 3.749022316631464}]}, 
         InsetBox["\<\"q:11:Northfield_Terminus_end\"\>", 
          Offset[{2, 2}, {2.247717341474172, 3.757752937224191}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{0.42403863774174566, 2.963410247864829}, \
{0.5549980208429671, 3.094369630966051}]}, 
         InsetBox["\<\"q:11:Hawthorn_Crescent_fwd\"\>", 
          Offset[{2, 2}, {0.5637286414356943, 3.103100251558778}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{-0.06547969155061072, 1.6455756933259855}, \
{0.06547969155061072, 1.7765350764272068}]}, 
         InsetBox["\<\"q:11:Berryden_Retail_Park_fwd\"\>", 
          Offset[{2, 2}, {0.074210312143338, 1.785265697019934}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{1.1479475916557653, 0.7533583968959029}, \
{1.2789069747569866, 0.8843177799971244}]}, 
         InsetBox["\<\"q:11:Adelphi_fwd\"\>", 
          Offset[{2, 2}, {1.287637595349714, 0.8930484005898516}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{3.0461820239060304, 0.7816190277376044}, \
{3.177141407007252, 0.9125784108388258}]}, 
         InsetBox["\<\"q:11:Queen's_Cross_fwd\"\>", 
          Offset[{2, 2}, {3.1858720275999795, 0.9213090314315531}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{5.1639497518499375, 1.4793008193981825}, \
{5.294909134951158, 1.6102602024994037}]}, 
         InsetBox["\<\"q:11:Woodend_end\"\>", 
          Offset[{2, 2}, {5.303639755543886, 1.618990823092131}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{7.421967003052648, 2.7275699969415914}, \
{7.552926386153869, 2.858529380042813}]}, 
         InsetBox["\<\"q:11:Queen's_Cross_rev\"\>", 
          Offset[{2, 2}, {7.5616570067465965, 2.8672600006355404}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{6.8457369346729635, 3.460435859185232}, \
{6.976696317774184, 3.591395242286454}]}, 
         InsetBox["\<\"q:11:Broad_Street_rev\"\>", 
          Offset[{2, 2}, {6.985426938366912, 3.6001258628791812}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{4.304063536320426, 3.7074928294300498}, \
{4.435022919421646, 3.8384522125312714}]}, 
         InsetBox["\<\"q:11:Berryden_Retail_Park_rev\"\>", 
          Offset[{2, 2}, {4.443753540014374, 3.847182833123999}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{14.598075206917361, 0.2093717007793151}, \
{14.729034590018582, 0.34033108388053657}]}, 
         InsetBox["\<\"q:19:Culter_end\"\>", 
          Offset[{2, 2}, {14.73776521061131, 0.34906170447326385}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{12.930274885584842, -0.04867468016274211}, \
{13.061234268686063, 0.08228470293847932}]}, 
         InsetBox["\<\"q:19:Milton_of_Murtle_fwd\"\>", 
          Offset[{2, 2}, {13.06996488927879, 0.0910153235312066}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{10.996496035933902, 0.6642557211326069}, \
{11.127455419035122, 0.7952151042338284}]}, 
         InsetBox["\<\"q:19:Mannofield_Church_fwd\"\>", 
          Offset[{2, 2}, {11.13618603962785, 0.8039457248265556}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{9.01825138119389, 2.0681842148207545}, \
{9.14921076429511, 2.1991435979219762}]}, 
         InsetBox["\<\"q:19:Holburn_Junction_fwd\"\>", 
          Offset[{2, 2}, {9.157941384887838, 2.2078742185147036}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{8.981594229590762, 3.6971604124983197}, \
{9.112553612691983, 3.8281197955995414}]}, 
         InsetBox["\<\"q:19:Broad_Street_fwd\"\>", 
          Offset[{2, 2}, {9.12128423328471, 3.8368504161922687}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{9.743583159217582, 5.710318302088458}, \
{9.874542542318803, 5.841277685189679}]}, 
         InsetBox["\<\"q:19:Sir_Duncan_Rice_Library_fwd\"\>", 
          Offset[{2, 2}, {9.88327316291153, 5.850008305782406}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{9.633387336548143, 7.26667505481287}, \
{9.764346719649364, 7.397634437914091}]}, 
         InsetBox["\<\"q:19:St_George's_Church_fwd\"\>", 
          Offset[{2, 2}, {9.773077340242091, 7.406365058506818}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{8.56196808358842, 6.914486367936644}, \
{8.69292746668964, 7.045445751037865}]}, 
         InsetBox["\<\"q:19:Tillydrone_end\"\>", 
          Offset[{2, 2}, {8.701658087282368, 7.054176371630592}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{8.127155509756594, 5.081824015051762}, \
{8.258114892857815, 5.2127833981529825}]}, 
         InsetBox["\<\"q:19:Sir_Duncan_Rice_Library_rev\"\>", 
          Offset[{2, 2}, {8.266845513450543, 5.22151401874571}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{9.5856659388804, 3.7318251715583677}, \
{9.71662532198162, 3.8627845546595894}]}, 
         InsetBox["\<\"q:19:Broad_Street_rev\"\>", 
          Offset[{2, 2}, {9.725355942574348, 3.8715151752523167}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{12.048174683185204, 3.4450580769894588}, \
{12.179134066286425, 3.5760174600906804}]}, 
         InsetBox["\<\"q:19:Holburn_Junction_rev\"\>", 
          Offset[{2, 2}, {12.187864686879152, 3.584748080683408}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{14.015342261701727, 2.795754104427667}, \
{14.146301644802948, 2.9267134875288887}]}, 
         InsetBox["\<\"q:19:Mannofield_Church_rev\"\>", 
          Offset[{2, 2}, {14.155032265395675, 2.935444108121616}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{15.115787304530077, 1.538040825235137}, \
{15.246746687631298, 1.6690002083363582}]}, 
         InsetBox["\<\"q:19:Cairn_Road_rev\"\>", 
          Offset[{2, 2}, {15.255477308224025, 1.6777308289290855}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  Epilog->{
    InsetBox[
     FormBox["\"\"", TraditionalForm], {1.2473346808719699`, 
     3.443451559406322}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {0.019689591032370224`, 
     2.4241252621821543`}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {0.4587658066740081, 
     1.141002437943606}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {2.122665850856902, 
     0.7385396786130523}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {4.152656660728075, 
     1.1243208751844864`}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {6.338150337275548, 
     2.104204708094648}], 
    InsetBox[
     FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {6.976580554010786,
      3.0268754291409112`}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {5.59703229665087, 3.681540332498612}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {3.2259654698219142`, 
     3.782907921307639}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {13.895686451715457`, 0.}], 
    InsetBox[
     FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
     12.040915118168485`, 0.2765767342343666}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {10.074535054130777`, 
     1.3473540167316826`}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {9.189467611781769, 
     2.8889658106608738`}], 
    InsetBox[
     FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {9.518088845473713,
      4.805734400441581}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {9.907407083816802, 
     6.646584358088683}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {9.119782145836933, 
     7.488805834041594}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {8.336650398042316, 
     6.1574437883214195`}], 
    InsetBox[
     FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {8.955973321880418,
      4.5540824292919915`}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {10.935409951607834`, 
     3.67523416254541}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {13.175362099428632`, 
     3.267830882533448}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {14.787163895301262`, 
     2.3144338852655677`}], 
    InsetBox[
     FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {15.14589133674008,
      0.8590976342071652}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {7.963347279216269, 
     2.7314262362888404`}], 
    InsetBox[
     FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {7.449153657610533,
      4.437287560636171}], 
    InsetBox[
     FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {8.229197249974831,
      3.2853134764925676`}], 
    InsetBox[
     FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {8.599381405338978,
      3.2599569817106593`}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {2.1735070293308336`, 
     3.683542625080853}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {0.4895183292923564, 
     3.02888993941544}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {0., 1.7110553848765961`}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {1.213427283206376, 
     0.8188380884465136}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {3.1116617154566413`, 
     0.8470987192882151}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {5.229429443400548, 
     1.544780510948793}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {7.487446694603259, 
     2.7930496884922023`}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {6.911216626223574, 
     3.525915550735843}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {4.369543227871036, 
     3.7729725209806606`}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {14.663554898467972`, 
     0.27485139232992584`}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {12.995754577135452`, 
     0.016805011387868607`}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {11.061975727484512`, 
     0.7297354126832176}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {9.0837310727445, 
     2.1336639063713654`}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {9.047073921141372, 
     3.7626401040489306`}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {9.809062850768193, 
     5.775797993639069}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {9.698867028098753, 7.33215474636348}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {8.62744777513903, 6.979966059487254}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {8.192635201307205, 
     5.147303706602372}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {9.65114563043101, 
     3.7973048631089785`}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {12.113654374735814`, 
     3.5105377685400696`}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {14.080821953252338`, 
     2.861233795978278}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {15.181266996080687`, 
     1.6035205167857476`}]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{1850.25, Automatic}]], "Output",
 CellChangeTimes->{3.920527983848564*^9, 3.9205280737800064`*^9, 
  3.92052812453306*^9, 3.920531680324526*^9, 3.92053277244956*^9},
 CellLabel->"Out[163]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsfQmcZkV1b01/W+/dszDDMjAzDTMDo7gQ0VFbM4ILwwBGFGi3URRFFEVR
GpyIDCA+lDzFGNslSiTh6RMmiY6orTGihqhxJcaN2MaFuO8LGoOm3/c/S9Wp
unXvd7+ZHvPe7/n9fn37++6tW3Xq1Nnq1KlTp579gmc87dlnv+C8p569/hEX
nv3cZ5z31Oevf/gFF3ZvNZY5N/RXzjX/cr1rdr8vOrfPlz3O/f6d37/z+3d+
/87v3/n9O79/5/fv/L/wziCVbox3Lw/v/j0evwYuoHuPl3vLfeE39ld3m0q3
VncvVw6NjHxy3Yajvn6frdM/OHPnU93Ary645HLX+sHMk552x9bpbZ85YsOR
14yOjq/1L7+hv7Za3Bbg/Ye169b/bOfTz1/c+6FPLd7+vV+75uK//WTRtfB9
8V233nbn05/zgo8esWHqNP/y6/trq8FtAS9XjU1MfP1ex29dfM31Ny1++Ye/
cUPUVnPxDW99x78f/4AHv3J8cvlyfe+1tZvZjcuqvd3Lc3h80M7PTp954uIH
b/uKG6U2Gosf+cIdd575hKegjX1qwDXQwuLtt9+OPzdJV7rnP4dxuXXHnPzH
2zdtv5R+ncr3TuxevnHcfe+/eMunv+zGA0jodkDt3JKDtIau7cF1f3jZA7sg
nb9xx2XXbTr5sr3dv7M3b98t0K3qXm5df+TGxVe98S3dahi67qBg4AORvWbJ
oVtF1+ZRW0697DGbT7rsqk0n7/7bzSfvbgA818DX1VOPuowKncJV7h6bWP7L
Jz/jOUQ+yxlSkCjYIUD3Z0sO6SRDOnKPh13zoI07Lr9g8/YXX9+FtsOQXrpp
x4t90R1cJWTFJzYctWnxbe/5sFshOO0yFJg3CImlh3Qs4PSsTdtffPXmHZcB
kcMM6fGbTro8hfSB3cs3u6Jm8XPf+oWHtMv+EDUPP4CQDuVxOsaQ7ule21vO
iEb/Md3Lj//ozMcTjCsZUgjFx2uV1P6rlxzSdh6nkwzp7o3bL/NF785VLj92
xyWgXaLfBl8POfoRLzl28/YX4c816UrjceKmU+jPNenaACs89uiTd+PPNXFt
ATeu8baJtfe+69wLZm33oRkuOMDdH+Dujx910mXbul2/cNP2y27o9nwVd//Z
XUyk3UIx360GXyES4265xjndqtA36l+Te3llF8OQBPjrynK6AuNv3Lyd/lyT
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
WGVaKySWtewIQfCDgdbgZ5evv59usXhZa2SFRjVFZEfQZVI4elzmPJDGAlJ7
AmUT9yh9klmklbpTvvYoxG4mf5sUEsNiqU8dUIova12aCV+qw4IxkEtoZXJ3
WRC0Da6zo3NLS0p+2roPMW0mrtD2cMY/S+ZolvIilGgFyblJ9CmJYjOU6pO/
6rMFg5JZF/enqBUfyZX0nWRA9Mr5Gwt7QchtitBb7PKJ3aYf5ZeirYGiFZ/E
j6BldReRGw65AGjzDD4H09WvIqYGCGG/L93Iwn3M+hEU3jJm92Ymj8Bw5Dhx
eWEQDLTI666vWnFjqs7mx0zf1Wl8RscPW4vXdiVvmE3aKnIGcoruOnPJzGzA
JVAk6n4osuPtc2ewJYmqU41ibX2riaxVkjiHYns0p0tNnmWLjrlQvnJU/Shw
e2usmZ1TpNnZnSuKY9tmlTZdErzQl9WMDn0w76x29CfvRr4CsZ8jmsgFTEtG
4Modecv5PbTj54O5HPLGxejLred7EVlLks9Ihptj4VO5ruVmYhT5ZnOpzuRe
JIwOjUFJvHen0tO+8pyIgZbuv7ROvHhD2scZAojpVBLzNlXa/qDh+Lp1BqaJ
R8jBcSfYCmP1ZoWpR1BiWEVGY3ki03aEYPM8WZbUDw0rq+Yxez+1aHR4lZKv
dtHkoZVKv+nQPe9mMIZnFK+fOBQXXKzgI1WTOwAkMRzCzC9O4xZsjLY17awQ
knjHVKTXF9st7YB+pn1JPoJNPzn8GpEXb+iRtNwW6khkuKLO9XAIXCm+2QLl
tnKi24o5P4FIzlSyhuisb6ok/WohzlEVXDK5cAbInPnnZWDnACGFLsKsOioE
QCtAFM8XcutBMoyRccpTq9Ldw0a4ekoZr67aI4bhiQX4eKacJJ6N2nDBtcqd
o0ZQZFWmhn2Vz7nkS0NR8qXuB74fOIlg8UKpJZv6P801AWF+B7lI4SfyI2wR
9BsYR1kKUyX6OYquTct6XqqW5JbNKeScG3Yt37OGhEYt9BRXOZN0OFOuXPLE
IzKauTcS4PPvjmfKyfHDaE85fyE0HXUvt0SXA3G8ZtMp73mqM9MRz3oS3pDO
9RZC5dUb1gVH87ZDE/k6CQ4mHc/Spp0cj2XHaMGWk3sR8pbGIpJt55lsXy3N
9vXE1thB2zYXsiz8M7+JaapPmyEcxjkrKHuiJivUbJJROodNMWgswfleXbay
c4F+2SqaweXYKvGf19ftMbdXcFhEUTkyN5zoy+4Pexk9Ppe82xMW+vKH/Eo/
qQ0kcUgf2e0ks2SUkkVo63H8CJpRsz1qgLVPI4SP5Cb2bih8DG3NRPeSM1Pp
U0pMsnnWWiGS97WaUnK+7nLSiOxR1DVWWjSOYDkw1FELHPryEH6rZhqI/+Jq
MunpyrIAitxBXf5gF6GNx/IjrBf5+ZXQBsS6gmkq4z3kdTM8SFq8slR0mZR+
AixytvhUNLGQRNN4TBl8xQyJ8lKGyp7FwNZM1vAfXH8fOfwEWMRSXp9wncxc
sdMGWxiuM+En+O7Tf4XKOBtHdXKGUPpOrr+PvH23BWB96hMB9sn8aGrjjkte
3wX2nZu6U2vZNgGNnsEs54MtzWwQCv6cq+4jTZ/ACT9BCueT6NqEmgR6wCln
dou0QroQ75sN9XGW4w6e2G39iBk6TbzCpvRPArw10+8JvFGClYgI2hhsMMh1
kqQDN0GLsqP6nE1ZTruEX0aKB6BVZzQXyRbPUPBHDEAfifUE5CiDSky3mCyg
NXPaRRu0rAk094oW8wk96cLKpKPbzjSGGYwMJqBtZ6H097mpesndLL9FeVHi
OYqmRKLwZgnFtwnVoXVDfbsZXog/yANVzTbLnWn9O9xEvdxtOXi3GNJ4Aj/S
pDDkzWJt27Q5tGNmuoLh1azsPbLYcdaPfnKxiRUBAHzukEj4NkHdGE6wHsAQ
QxOMdI3qllAfn05bnZhuecAR+pDgXCgVeP3guqkjayRd+xd+A+343EHf5D6w
JdTUxMLoB/ojuh7QeIMo1MfHpJUmn5sIdaq0jnniM2FQ33TwsY/8xbH3mUYy
seocap8LnfCB+lEnKEPwjZoSOrwoefsrHddkiAyE1BBbjyokIPokdxoKEoIW
jPGaidXrNRNadSI0SWJ9XQZ4sTdUB4EIzIt85HGpD4dsNyMzMzr0n+j3EJjj
RskxDeLrOxddoTOgFa8KpTNsBNLpAnvEojAvvpFHonKWzFZu2J/ovSmhmo/Q
b0qhqUmhgQ9iHXGs9J1xLtT+Re4CgPLxs9I7zjDYBJwYySsLeeT+gjtYOa8R
81hzs9o8Ihgfb7aFWjlYieQMmkSN0Nr7mlcuVPwlBuUqGyosXT2T2wTEeAyK
j9eK/5K7WmmhyzxWZb3degr1ncla9SFudkrO+IEUB+nLvLqPPGX/GrrmF1Ci
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
2zuOrqJFMH9cn8TAnFUh0J5Q0TsxKfZYmdMok+nv5cKW4URxNk85+uG0toGB
z+S9k4gR1XghX9xA1DM9OMf27OrN5eO2s6JnYjFCBKda/hwbSkwVvYcLR+zX
DtOla48++dIkqdeiARsS5vWSyy3XrZ1yarXtFtDgzyhLqn0y3WznugWZK5Gs
aJVa9O+9O9BPqkCiY2nzZBepULbtbC/GNKpf/yB/QHaawxHUDeEMc0ajSVWG
basYxLPpZtP2FsgUoXSVZC0Ob97M4OYks+arJobLi45I8dpeMonS8Uh7hL+h
iiBddXaqvXRhiMkJjBkchCcke9Iqp+VrPHTjIy57h8hHBRZDGmtkjumN+Ws0
GKZegeZNoEgd04Om7VkDPQFp0DyzFXrk1ZlMOUBTW0oo86lcBGBflxA0IFwb
vfb2UJ9nqonA1ITZTBsyoVKlTJsY6QHDrGGoAN3HsSVVnMdFIG78NnEJF4PW
jRnhb7lwxDWTwbcYD1G4cOy017EhsXUMJri0DExONEm5XzVQUREEqeMVPxWW
s1ojsh/nwiAWgJ8k16aLzDVUY0Lv84O2AXMAEOaB0whdaml5YDO/aEeFb+LC
EeUKwiEmIBKIifOUC9jxWlB4FjheC7lYl8GTKp7ORbYZ4eTkGMjTrNCRqA9Y
w8i3/HjuNt17vNxb7ivlWXNMuUZu79LByZuTquWofXrQKXQnFkHhci7dbAFZ
aAHUhdbINFuR0V6y1RAz7pcODY18ct2Go75+n63TPzhz51PdwK8uuORy1/rB
zJOedsfW6W2fOWLDkdeMjo5v9o39WUB/Kklhf0BtJcmorb4oar24m+eLXsh1
k3O/tiCKQNBoSQPhlKgvUiMJHzmzEXL4Wc1m85/XH7Xxl09+xnMW33LzLYtf
/M6vmov/9pNF1168/Xu/Xvzrv/vor8694KLPH7n5mOd1iw5qk69iqCL+GQyS
GLODnNoQ4anKkWQwPRiMOgu1UNbZ53FnweZoBdbftaJh1DhF572WE82CBq7p
jum3H/DgE9HRYepkc/Gm+Vu//6ATHv6nw6Ojy7UJPgsr5r92IFjgckuczJou
NOMcuFrN2KHaXZLEzEAY6gWlKzmIxdG5xsrO7ufi7mB896Enn7Z4y6e/7Eap
L43Fj3zhjh+fdOqjL+90Olwxn3YTc14rSG5416jSBB5x6Wjqb1ItJV16fUnM
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
h2RRRSx4qgEsDqpOH5PZpCJ3fhCcLc2FG4Fh0W/nc2PJqTpIhBECrVrX5aZE
iZsHRy5R3VeqQ9cnzqnOx1+++8Op7qusiuNTkrgi2cP9CCTnI56kKhi4WRY0
OXRdC6IMF1DIKRf7EeoNdtNkMB+NcK6kjioKN+l8bB3V12UQJpFN5uPKKeVB
3JIHoZ7B4Mz0m1QMkVSWg2QKOSnAeEFPAU/gLNOitkt323+tuaHS9DG+LOma
oCypTCnScpJjjB8M5/SNvQFZphUJc6AsIC42ACV47UVSn6lTn9LCAx/4wFUL
t956a38x+h9v0Ot35oe4CqBrgjqaMkOnz8gMk8Llx8bpBdu7xHtS83bQb0+z
MxzG0f87rxuWFfopiIiofDpJzKoaMsNUKTSaocTlXGXtoPKMJFP5gX2GvrvT
emy3TMxZGxOROHFmMqIVc6Q3jnbsgpgCauA414k4MWT5XDFRRVBbTFQmZ9UU
aytonBydqwEk7lyNNWtNEgm6gK5OT+kcijfRg8D0yDwwZKVciVElIH1RLJUY
vZrbqfeDncxVsfLKVT7aKjNj26cDGkGA3+ROtcRZVH2S3jQxen/gmAJNY7Z5
MpDKkJPEUfdr33FjqjL6emrXsYeTSYEsJ+CM+aD92Zj/TDsL2iuYpCY5GLAq
QyciNBBCMqXqQYonYbeo4YdyqJWZiD3hwl8hh3LKQDIXXyqF6pK5+Fn8wCfw
A0HUwIVzJo3lTQBhbYA68lQl6ae/Eqh4Sgb/a3hoNvvIbtX26Y2LUJENWJNJ
JRsw2x9FPk8cNUq/Qm/qeDTa2IlCXrt6y/af3OM+D0TmtdlcPhMyK2RXORpo
Wyt7EsXojZNWJLstMCwZYJ/Nj2PpmoohokmUENpQqlE3QRc4AWi9/rgzL3n1
zOpjKIFcX/CckRqsfd0CZUyha2BRZSY2C0eCM739fYbKRWKzBuOn3+TcR3KD
XSIKVMQ8F0acBFf5m1B1RP1YIbchGx6SaSIdLynWqjn2SdfPnvviy1G79CIp
lVsdyMDFlAqzH2c9aeGpNCIQyZX03sE1gBBcL7m/0k0X2cmS8AwwY2MFfPT/
jDhfPv9NbE2dxoitiX8E0BJpiClJ+SuveQvVQVGjwkc+9zWUrUTxThgeqIDj
tfxsLENwVGnnriNbSe/tm1vdqZqNVZjxeXwbcKOJr446Z3a2SJZshTLr1DP4
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
Hi66/JouavShlJUaGHhacEU1gY1/LkF8LV8DRVO63sOD5wrQf9mF1YQuCfUf
WoeJWhxjYDz9tUBC+i3Pu11Nczpo60vOBS57d5Yi1ucVOER9+ULZZbMuvd2m
LUdpqc9g3XRLqdnJck/FvSoOxXIjc9Z0udwiMxt7rkBXldrMbJZIZMrUJRKa
3VIL27iV45rdtMslB3e47RqhedP2V9BxdxB5VTkG6Vnn9O50eUKd+4vmlUxu
7/mUveUSih64kkJGqtpOrhtN/AsO3wCY6UyMSQUb7b4p19tOFfvwtTM2bC9T
t4TZHbPKDlbElPEWedPJr/T1svCqVTpqDNj03wttBSdhfRu3iI9DUPZW3FSX
rQmLnd1ziIpvjjzReSDmraO93MheNL8Drl0fxQuV+IbTvTIzwkidgl9d+GtV
mWlZ1URAGEpgY5T0dyQBzLZaQU+3nxhJgZn86i73qin5P6MPKy3sfKtv2vZL
1PPufjVnu9nUxaoaRhqsKaUB4qs+sWnHqRZTC057IVjaJtPg5a5H57TzpJsr
5UJJmpLeJtKjqbteLIjkd3tIHSexWDbW3oz5V6j9QhC8nN9okRGuLjEXIpiE
L87iVkeKggoiyUBGHxG4WQisGUoIVHl3VG2eYCqV6NXZdX255d60v1brqYGu
u63u+YbjOCx6adyj4romiqC85natJfw6VPLVEFO9XsZc0ZLbtrWO+Z4IIp0v
J2k0x1sm+WT5PlaSuHZNf3ZjZD0lYveD3s4G1xpizax1ZjetS13f1r9icHsl
u0bqPorQkSg5a0okNEZR97p7aafyDdtNmdsqVJM+vEJWbfVJXYxfdKbGiNNb
t+wXKsuNM+V8ap/etQOJ7GgOM72JvUUb2IABDY5SVHwgj2PK9HcxywlMdHSe
FF23BB12Rptoa+11oYNHnc67MkbOtFXVtzfTGff/cW7zDtrea5jOWZxEpIrC
+hvmtF0R2ZFvs9/LTpZzuuTRjjntmccEuSk7JNNqqIlNpUm4NtSErdlVG9VG
fRwE4KclSbOG3n/YKWz/3lPlieXNuzAlYbU1tNGcqfdRXJgwiIXZtlwfWYMz
w85YJtN7I81xGlL+cy8nOJFHgvWVFEPb4ewMm7rgoAemAp2RPpbox3L+a3vN
1vbomnki7omCMmfi1DhT0Ahmr4sed+CqWqSyD3kupuz/F17Ns5k3a4tiadOa
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\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"3ab99a25-f6cb-9e49-b16e-b4cb52395fde"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TAPs", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9205252758686485`*^9, 3.9205252804311695`*^9}, {
  3.920532522320402*^9, 3.920532528461933*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"dd81afa4-561b-c044-bb6a-a0b2c9f56864"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"q:11:Northfield_Terminus_end\"\>", 
   ",", "\<\"q:11:Hawthorn_Crescent_fwd\"\>", 
   ",", "\<\"q:11:Berryden_Retail_Park_fwd\"\>", 
   ",", "\<\"q:11:Adelphi_fwd\"\>", ",", "\<\"q:11:Queen's_Cross_fwd\"\>", 
   ",", "\<\"q:11:Woodend_end\"\>", ",", "\<\"q:11:Queen's_Cross_rev\"\>", 
   ",", "\<\"q:11:Broad_Street_rev\"\>", 
   ",", "\<\"q:11:Berryden_Retail_Park_rev\"\>", 
   ",", "\<\"q:19:Culter_end\"\>", ",", "\<\"q:19:Milton_of_Murtle_fwd\"\>", 
   ",", "\<\"q:19:Mannofield_Church_fwd\"\>", 
   ",", "\<\"q:19:Holburn_Junction_fwd\"\>", 
   ",", "\<\"q:19:Broad_Street_fwd\"\>", 
   ",", "\<\"q:19:Sir_Duncan_Rice_Library_fwd\"\>", 
   ",", "\<\"q:19:St_George's_Church_fwd\"\>", 
   ",", "\<\"q:19:Tillydrone_end\"\>", 
   ",", "\<\"q:19:Sir_Duncan_Rice_Library_rev\"\>", 
   ",", "\<\"q:19:Broad_Street_rev\"\>", 
   ",", "\<\"q:19:Holburn_Junction_rev\"\>", 
   ",", "\<\"q:19:Mannofield_Church_rev\"\>", 
   ",", "\<\"q:19:Cairn_Road_rev\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.91965282313913*^9, 3.919746213667055*^9, 3.9197472663128185`*^9, 
   3.919747599703594*^9, 3.919747822709197*^9, 3.919921906821726*^9, 
   3.9205249568333015`*^9, 3.92052528111866*^9, {3.920532523805586*^9, 
   3.920532529993065*^9}, 3.920532775652666*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"e65a3276-f645-7443-82dd-72a705108172"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReplaceInRows", "[", 
   RowBox[{"matrix_", ",", "oldValue_", ",", "newValue_"}], "]"}], ":=", 
  RowBox[{"Replace", "[", 
   RowBox[{"matrix", ",", 
    RowBox[{"oldValue", "->", "newValue"}], ",", 
    RowBox[{"{", "2", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ChangeNonZeroValues", "[", 
   RowBox[{"matrix_", ",", "newValue_"}], "]"}], ":=", 
  RowBox[{"matrix", "/.", " ", 
   RowBox[{
    RowBox[{"x_", "/;", 
     RowBox[{"x", "!=", "eps"}]}], ":>", 
    "newValue"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noZeros", " ", "=", " ", 
   RowBox[{"ChangeNonZeroValues", "[", 
    RowBox[{"mtx", ",", " ", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noInfi", " ", "=", " ", 
   RowBox[{"ReplaceInRows", "[", 
    RowBox[{"noZeros", ",", " ", 
     RowBox[{"-", "eps"}], ",", " ", "0"}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"AdjacencyGraph", "[", 
  RowBox[{"noInfi", ",", " ", 
   RowBox[{"{", 
    RowBox[{"VertexLabels", "->", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"i", "\[Rule]", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{"ToString", "[", "i", "]"}], ",", " ", "\"\< - \>\"", ",", 
          RowBox[{
           RowBox[{"TAPs", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"TAPs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], "}"}]}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.9205254285549545`*^9, 3.9205254330705757`*^9}, {
  3.9205282131648235`*^9, 3.9205282459130173`*^9}, {3.920528312489811*^9, 
  3.9205283340816994`*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"ecdeba4b-4739-4e2d-abe8-a231f2bcc863"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22}, {
      SparseArray[
       Automatic, {22, 22}, 0, {
        1, {{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 28, 29, 30, 31, 33, 34, 35, 
          36, 37, 39, 41, 43, 45}, {{7}, {11}, {18}, {7}, {11}, {18}, {7}, {
          11}, {18}, {7}, {11}, {18}, {7}, {11}, {18}, {7}, {11}, {18}, {7}, {
          11}, {18}, {7}, {11}, {18}, {7}, {11}, {18}, {22}, {22}, {11}, {
          11}, {7}, {11}, {14}, {14}, {14}, {14}, {7}, {18}, {7}, {18}, {7}, {
          18}, {7}, {18}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1}}], Null}, {
      VertexLabels -> {
        4 -> "4 - q:11:Adelphi_fwd", 14 -> "14 - q:19:Broad_Street_fwd", 5 -> 
         "5 - q:11:Queen's_Cross_fwd", 19 -> "19 - q:19:Broad_Street_rev", 10 -> 
         "10 - q:19:Culter_end", 20 -> "20 - q:19:Holburn_Junction_rev", 13 -> 
         "13 - q:19:Holburn_Junction_fwd", 15 -> 
         "15 - q:19:Sir_Duncan_Rice_Library_fwd", 2 -> 
         "2 - q:11:Hawthorn_Crescent_fwd", 22 -> "22 - q:19:Cairn_Road_rev", 
         6 -> "6 - q:11:Woodend_end", 1 -> "1 - q:11:Northfield_Terminus_end",
          8 -> "8 - q:11:Broad_Street_rev", 3 -> 
         "3 - q:11:Berryden_Retail_Park_fwd", 18 -> 
         "18 - q:19:Sir_Duncan_Rice_Library_rev", 12 -> 
         "12 - q:19:Mannofield_Church_fwd", 17 -> "17 - q:19:Tillydrone_end", 
         21 -> "21 - q:19:Mannofield_Church_rev", 7 -> 
         "7 - q:11:Queen's_Cross_rev", 11 -> "11 - q:19:Milton_of_Murtle_fwd",
          16 -> "16 - q:19:St_George's_Church_fwd", 9 -> 
         "9 - q:11:Berryden_Retail_Park_rev"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.022041239337419367`], 
        ArrowBox[{{2.2733223021436886`, 0.591600752206985}, {
         2.664112546776443, 1.1461726156708592`}}, 0.04103183794387892], 
        ArrowBox[{{2.2733223021436886`, 0.591600752206985}, {
         2.535083598459651, 1.6820847588205172`}}, 0.04103183794387892], 
        ArrowBox[{{2.2733223021436886`, 0.591600752206985}, {
         2.695627745754886, 0.9847070417698794}}, 0.04103183794387892], 
        ArrowBox[{{1.9356883469366393`, 1.3772590479107123`}, {
         2.664112546776443, 1.1461726156708592`}}, 0.04103183794387892], 
        ArrowBox[{{1.9356883469366393`, 1.3772590479107123`}, {
         2.535083598459651, 1.6820847588205172`}}, 0.04103183794387892], 
        ArrowBox[{{1.9356883469366393`, 1.3772590479107123`}, {
         2.695627745754886, 0.9847070417698794}}, 0.04103183794387892], 
        ArrowBox[{{3.081030795760779, 1.9220983423648046`}, {
         2.664112546776443, 1.1461726156708592`}}, 0.04103183794387892], 
        ArrowBox[{{3.081030795760779, 1.9220983423648046`}, {
         2.535083598459651, 1.6820847588205172`}}, 0.04103183794387892], 
        ArrowBox[{{3.081030795760779, 1.9220983423648046`}, {
         2.695627745754886, 0.9847070417698794}}, 0.04103183794387892], 
        ArrowBox[{{2.029779327470684, 0.9474439087808952}, {2.664112546776443,
          1.1461726156708592`}}, 0.04103183794387892], 
        ArrowBox[{{2.029779327470684, 0.9474439087808952}, {2.535083598459651,
          1.6820847588205172`}}, 0.04103183794387892], 
        ArrowBox[{{2.029779327470684, 0.9474439087808952}, {2.695627745754886,
          0.9847070417698794}}, 0.04103183794387892], 
        ArrowBox[{{2.0268350809720053`, 1.7980944300422532`}, {
         2.664112546776443, 1.1461726156708592`}}, 0.04103183794387892], 
        ArrowBox[{{2.0268350809720053`, 1.7980944300422532`}, {
         2.535083598459651, 1.6820847588205172`}}, 0.04103183794387892], 
        ArrowBox[{{2.0268350809720053`, 1.7980944300422532`}, {
         2.695627745754886, 0.9847070417698794}}, 0.04103183794387892], 
        ArrowBox[{{3.3145057692306956`, 1.298229423856624}, {
         2.664112546776443, 1.1461726156708592`}}, 0.04103183794387892], 
        ArrowBox[{{3.3145057692306956`, 1.298229423856624}, {
         2.535083598459651, 1.6820847588205172`}}, 0.04103183794387892], 
        ArrowBox[{{3.3145057692306956`, 1.298229423856624}, {
         2.695627745754886, 0.9847070417698794}}, 0.04103183794387892], 
        ArrowBox[
         BezierCurveBox[{{2.664112546776443, 1.1461726156708592`}, {
          2.3823299631796884`, 0.8171185548122935}, {2.3320766750655997`, 
          0.8099291047591295}, {2.299309140701462, 0.8191494394434803}, {
          2.2413287640311426`, 0.8986255374790028}, {2.2425524954889187`, 
          0.9326435968198238}, {2.2647409212519225`, 0.9783027133301574}, {
          2.664112546776443, 1.1461726156708592`}},
          SplineDegree->7], 0.04103183794387892], 
        ArrowBox[{{2.664112546776443, 1.1461726156708592`}, {
         2.535083598459651, 1.6820847588205172`}}, 0.04103183794387892], 
        ArrowBox[{{2.664112546776443, 1.1461726156708592`}, {
         2.695627745754886, 0.9847070417698794}}, 0.04103183794387892], 
        ArrowBox[{{2.6260909578722895`, 2.076869068826355}, {
         2.664112546776443, 1.1461726156708592`}}, 0.04103183794387892], 
        ArrowBox[{{2.6260909578722895`, 2.076869068826355}, {
         2.535083598459651, 1.6820847588205172`}}, 0.04103183794387892], 
        ArrowBox[{{2.6260909578722895`, 2.076869068826355}, {
         2.695627745754886, 0.9847070417698794}}, 0.04103183794387892], 
        ArrowBox[{{3.3740108801666553`, 1.6997199820603015`}, {
         2.664112546776443, 1.1461726156708592`}}, 0.04103183794387892], 
        ArrowBox[{{3.3740108801666553`, 1.6997199820603015`}, {
         2.535083598459651, 1.6820847588205172`}}, 0.04103183794387892], 
        ArrowBox[{{3.3740108801666553`, 1.6997199820603015`}, {
         2.695627745754886, 0.9847070417698794}}, 0.04103183794387892], 
        ArrowBox[{{4.653984891201111, 0.}, {3.514219704394633, 
         0.6609609621614864}}, 0.04103183794387892], 
        ArrowBox[{{2.535083598459651, 1.6820847588205172`}, {
         3.514219704394633, 0.6609609621614864}}, 0.04103183794387892], 
        ArrowBox[{{2.152442158975565, 3.0317184125584706`}, {
         2.535083598459651, 1.6820847588205172`}}, 0.04103183794387892], 
        ArrowBox[{{3.138186360123198, 2.9898948025163854`}, {
         2.535083598459651, 1.6820847588205172`}}, 0.04103183794387892], 
        ArrowBox[{{1.247156020776449, 1.0341593406202243`}, {
         2.664112546776443, 1.1461726156708592`}}, 0.04103183794387892], 
        ArrowBox[{{1.247156020776449, 1.0341593406202243`}, {
         2.535083598459651, 1.6820847588205172`}}, 0.04103183794387892], 
        ArrowBox[{{0.3095818687651275, 0.19280343123304844`}, {
         1.247156020776449, 1.0341593406202243`}}, 0.04103183794387892], 
        ArrowBox[{{0.07280640961517504, 1.4965891923181498`}, {
         1.247156020776449, 1.0341593406202243`}}, 0.04103183794387892], 
        ArrowBox[{{0., 0.8101243406300594}, {1.247156020776449, 
         1.0341593406202243`}}, 0.04103183794387892], 
        ArrowBox[{{2.695627745754886, 0.9847070417698794}, {1.247156020776449,
          1.0341593406202243`}}, 0.04103183794387892], 
        ArrowBox[{{3.1036070319804403`, 0.11462284373905374`}, {
         2.664112546776443, 1.1461726156708592`}}, 0.04103183794387892], 
        ArrowBox[{{3.1036070319804403`, 0.11462284373905374`}, {
         2.695627745754886, 0.9847070417698794}}, 0.04103183794387892], 
        ArrowBox[{{3.771582074525025, 0.9659717423176517}, {2.664112546776443,
          1.1461726156708592`}}, 0.04103183794387892], 
        ArrowBox[{{3.771582074525025, 0.9659717423176517}, {2.695627745754886,
          0.9847070417698794}}, 0.04103183794387892], 
        ArrowBox[{{2.5126614958421514`, 0.008035420262903159}, {
         2.664112546776443, 1.1461726156708592`}}, 0.04103183794387892], 
        ArrowBox[{{2.5126614958421514`, 0.008035420262903159}, {
         2.695627745754886, 0.9847070417698794}}, 0.04103183794387892], 
        ArrowBox[{{3.514219704394633, 0.6609609621614864}, {2.664112546776443,
          1.1461726156708592`}}, 0.04103183794387892], 
        ArrowBox[{{3.514219704394633, 0.6609609621614864}, {2.695627745754886,
          0.9847070417698794}}, 0.04103183794387892]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{2.2733223021436886`, 0.591600752206985}, 
          0.04103183794387892], 
         InsetBox["\<\"1 - q:11:Northfield_Terminus_end\"\>", 
          Offset[{2, 2}, {2.3143541400875676, 0.6326325901508639}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.9356883469366393`, 1.3772590479107123`}, 
          0.04103183794387892], 
         InsetBox["\<\"2 - q:11:Hawthorn_Crescent_fwd\"\>", 
          Offset[{2, 2}, {1.9767201848805183, 1.4182908858545913}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.081030795760779, 1.9220983423648046`}, 
          0.04103183794387892], 
         InsetBox["\<\"3 - q:11:Berryden_Retail_Park_fwd\"\>", 
          Offset[{2, 2}, {3.122062633704658, 1.9631301803086836}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.029779327470684, 0.9474439087808952}, 
          0.04103183794387892], 
         InsetBox["\<\"4 - q:11:Adelphi_fwd\"\>", 
          Offset[{2, 2}, {2.070811165414563, 0.9884757467247741}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0268350809720053`, 1.7980944300422532`}, 
          0.04103183794387892], 
         InsetBox["\<\"5 - q:11:Queen's_Cross_fwd\"\>", 
          Offset[{2, 2}, {2.0678669189158843, 1.8391262679861322}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.3145057692306956`, 1.298229423856624}, 
          0.04103183794387892], 
         InsetBox["\<\"6 - q:11:Woodend_end\"\>", 
          Offset[{2, 2}, {3.3555376071745746, 1.339261261800503}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.664112546776443, 1.1461726156708592`}, 
          0.04103183794387892], 
         InsetBox["\<\"7 - q:11:Queen's_Cross_rev\"\>", 
          Offset[{2, 2}, {2.705144384720322, 1.1872044536147381}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.6260909578722895`, 2.076869068826355}, 
          0.04103183794387892], 
         InsetBox["\<\"8 - q:11:Broad_Street_rev\"\>", 
          Offset[{2, 2}, {2.6671227958161685, 2.117900906770234}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.3740108801666553`, 1.6997199820603015`}, 
          0.04103183794387892], 
         InsetBox["\<\"9 - q:11:Berryden_Retail_Park_rev\"\>", 
          Offset[{2, 2}, {3.4150427181105343, 1.7407518200041805}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.653984891201111, 0.}, 0.04103183794387892], 
         InsetBox["\<\"10 - q:19:Culter_end\"\>", 
          Offset[{2, 2}, {4.69501672914499, 0.04103183794387892}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.535083598459651, 1.6820847588205172`}, 
          0.04103183794387892], 
         InsetBox["\<\"11 - q:19:Milton_of_Murtle_fwd\"\>", 
          Offset[{2, 2}, {2.57611543640353, 1.7231165967643962}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.152442158975565, 3.0317184125584706`}, 
          0.04103183794387892], 
         InsetBox["\<\"12 - q:19:Mannofield_Church_fwd\"\>", 
          Offset[{2, 2}, {2.193473996919444, 3.0727502505023496}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.138186360123198, 2.9898948025163854`}, 
          0.04103183794387892], 
         InsetBox["\<\"13 - q:19:Holburn_Junction_fwd\"\>", 
          Offset[{2, 2}, {3.179218198067077, 3.0309266404602644}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.247156020776449, 1.0341593406202243`}, 
          0.04103183794387892], 
         InsetBox["\<\"14 - q:19:Broad_Street_fwd\"\>", 
          Offset[{2, 2}, {1.288187858720328, 1.0751911785641033}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.3095818687651275, 0.19280343123304844`}, 
          0.04103183794387892], 
         InsetBox["\<\"15 - q:19:Sir_Duncan_Rice_Library_fwd\"\>", 
          Offset[{2, 2}, {0.35061370670900643, 0.23383526917692737}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.07280640961517504, 1.4965891923181498`}, 
          0.04103183794387892], 
         InsetBox["\<\"16 - q:19:St_George's_Church_fwd\"\>", 
          Offset[{2, 2}, {0.11383824755905396, 1.5376210302620288}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.8101243406300594}, 0.04103183794387892], 
         InsetBox["\<\"17 - q:19:Tillydrone_end\"\>", 
          Offset[{2, 2}, {0.04103183794387892, 0.8511561785739383}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.695627745754886, 0.9847070417698794}, 
          0.04103183794387892], 
         InsetBox["\<\"18 - q:19:Sir_Duncan_Rice_Library_rev\"\>", 
          Offset[{2, 2}, {2.736659583698765, 1.0257388797137583}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.1036070319804403`, 0.11462284373905374`}, 
          0.04103183794387892], 
         InsetBox["\<\"19 - q:19:Broad_Street_rev\"\>", 
          Offset[{2, 2}, {3.1446388699243193, 0.15565468168293267}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.771582074525025, 0.9659717423176517}, 
          0.04103183794387892], 
         InsetBox["\<\"20 - q:19:Holburn_Junction_rev\"\>", 
          Offset[{2, 2}, {3.812613912468904, 1.0070035802615307}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.5126614958421514`, 0.008035420262903159}, 
          0.04103183794387892], 
         InsetBox["\<\"21 - q:19:Mannofield_Church_rev\"\>", 
          Offset[{2, 2}, {2.5536933337860304, 0.04906725820678208}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.514219704394633, 0.6609609621614864}, 
          0.04103183794387892], 
         InsetBox["\<\"22 - q:19:Cairn_Road_rev\"\>", 
          Offset[{2, 2}, {3.555251542338512, 0.7019928001053652}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{789.75, Automatic}]], "Output",
 CellChangeTimes->{
  3.9205279153452015`*^9, 3.920527988476101*^9, 3.9205280815515537`*^9, 
   3.9205281307492027`*^9, {3.920528224883396*^9, 3.920528247237665*^9}, 
   3.9205283353153687`*^9, 3.9205316889351215`*^9, 3.92053277793392*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"ee071e52-c2a4-9b46-afbb-777773dc947c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mtx", " ", "//", " ", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.920525478150255*^9, 3.9205254860409126`*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"a73a869d-0b65-e441-a500-e89a53dbbbea"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "33.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "56.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "38.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}]},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "41.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "64.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "46.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}]},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "50.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "73.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "55.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}]},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "61.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "84.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "66.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}]},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "73.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "96.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "78.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}]},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "81.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "104.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "86.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}]},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "89.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "112.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "94.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}]},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "10.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "33.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "15.000000000000002`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}]},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "21.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "44.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "26.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}]},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "13.000000000000002`"},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "27.`"},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "15.000000000000002`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}]},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "24.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}]},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "10.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "33.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}]},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "14.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}]},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "17.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}]},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "20.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}]},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "28.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}]},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "10.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "15.000000000000002`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}]},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "17.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "22.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}]},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "28.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "33.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}]},
     {
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "39.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], "44.`", 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}], 
      RowBox[{"-", "\[Infinity]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.919921907768735*^9, 3.920524959989563*^9, 3.9205254338049736`*^9, {
   3.92052547985334*^9, 3.920525486681467*^9}, 3.920528019616081*^9, 
   3.9205316957632694`*^9, 3.920532782558916*^9},
 CellLabel->
  "Out[170]//MatrixForm=",ExpressionUUID->"49f9f16f-7be3-a641-9762-\
bbb4005ee4e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xnext", " ", "=", " ", 
  RowBox[{"mtimes", "[", 
   RowBox[{
    RowBox[{"mpower", "[", 
     RowBox[{"mtx", ",", " ", "1"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "eps", ",", " ", "eps", ",", " ", "eps", ",", " ", "eps", ",", " ", 
      "eps", ",", " ", "eps", ",", " ", "0", ",", " ", "eps", ",", " ", "eps",
       ",", " ", "eps", ",", " ", "1", ",", " ", "eps", ",", " ", "eps", ",", 
      " ", "eps", ",", " ", "2", ",", " ", "eps", ",", " ", "eps", ",", " ", 
      "0", ",", " ", "eps", ",", " ", "eps", ",", " ", "eps", ",", " ", 
      "eps"}], "}"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.9205322463017654`*^9, 3.9205322693183136`*^9}, {
   3.9205323877233944`*^9, 3.9205323879889164`*^9}, {3.920533071070917*^9, 
   3.920533084133295*^9}, {3.92053315391144*^9, 3.9205331906310387`*^9}, 
   3.920533822012087*^9, {3.9205339781517086`*^9, 3.920533982464199*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"ed546790-f2c1-bd44-a516-46dac81ddb6a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "57.`", ",", "65.`", ",", "74.`", ",", "85.`", ",", "97.`", ",", "105.`", 
   ",", "113.`", ",", "34.`", ",", "45.`", ",", 
   RowBox[{"-", "\[Infinity]"}], ",", 
   RowBox[{"-", "\[Infinity]"}], ",", "16.`", ",", "25.`", ",", "34.`", ",", 
   RowBox[{"-", "\[Infinity]"}], ",", 
   RowBox[{"-", "\[Infinity]"}], ",", 
   RowBox[{"-", "\[Infinity]"}], ",", 
   RowBox[{"-", "\[Infinity]"}], ",", "15.000000000000002`", ",", "22.`", ",",
    "33.`", ",", "44.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9205322782870235`*^9, 3.92053238937953*^9, 3.920533085367697*^9, {
   3.9205331572394714`*^9, 3.9205331925059204`*^9}, 3.92053382476198*^9, 
   3.9205339851047993`*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"7114cde6-0e22-c94f-aaa4-def45bfc47f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"List", "[", "xnext", "]"}], ",", " ", 
     RowBox[{"TAPs", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}], " ", "//", " ", "Transpose"}], 
  " ", "//", " ", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.9205342338321495`*^9, 3.9205344179610825`*^9}, {
  3.9205344947650948`*^9, 3.9205345392836914`*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"f9f458af-1a62-4c44-9255-716a2cfcc1a3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"q:11:Northfield_Terminus_end\"\>", "57.`"},
     {"\<\"q:11:Hawthorn_Crescent_fwd\"\>", "65.`"},
     {"\<\"q:11:Berryden_Retail_Park_fwd\"\>", "74.`"},
     {"\<\"q:11:Adelphi_fwd\"\>", "85.`"},
     {"\<\"q:11:Queen's_Cross_fwd\"\>", "97.`"},
     {"\<\"q:11:Woodend_end\"\>", "105.`"},
     {"\<\"q:11:Queen's_Cross_rev\"\>", "113.`"},
     {"\<\"q:11:Broad_Street_rev\"\>", "34.`"},
     {"\<\"q:11:Berryden_Retail_Park_rev\"\>", "45.`"},
     {"\<\"q:19:Culter_end\"\>", 
      RowBox[{"-", "\[Infinity]"}]},
     {"\<\"q:19:Milton_of_Murtle_fwd\"\>", 
      RowBox[{"-", "\[Infinity]"}]},
     {"\<\"q:19:Mannofield_Church_fwd\"\>", "16.`"},
     {"\<\"q:19:Holburn_Junction_fwd\"\>", "25.`"},
     {"\<\"q:19:Broad_Street_fwd\"\>", "34.`"},
     {"\<\"q:19:Sir_Duncan_Rice_Library_fwd\"\>", 
      RowBox[{"-", "\[Infinity]"}]},
     {"\<\"q:19:St_George's_Church_fwd\"\>", 
      RowBox[{"-", "\[Infinity]"}]},
     {"\<\"q:19:Tillydrone_end\"\>", 
      RowBox[{"-", "\[Infinity]"}]},
     {"\<\"q:19:Sir_Duncan_Rice_Library_rev\"\>", 
      RowBox[{"-", "\[Infinity]"}]},
     {"\<\"q:19:Broad_Street_rev\"\>", "15.000000000000002`"},
     {"\<\"q:19:Holburn_Junction_rev\"\>", "22.`"},
     {"\<\"q:19:Mannofield_Church_rev\"\>", "33.`"},
     {"\<\"q:19:Cairn_Road_rev\"\>", "44.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9205343915358124`*^9, 3.9205344187578354`*^9}, {
  3.920534497858841*^9, 3.9205345398617*^9}},
 CellLabel->
  "Out[196]//MatrixForm=",ExpressionUUID->"027afb06-4dfd-bc4e-ab5c-\
a07f06575703"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Length", "[", "xnext", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", 
  RowBox[{"TAPs", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.920534396270214*^9, 3.920534408442053*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"918548da-f6bb-dd45-9fef-df20f7a8034a"],

Cell[BoxData["22"], "Output",
 CellChangeTimes->{3.9205344090670376`*^9},
 CellLabel->
  "Out[189]=",ExpressionUUID->"309908c8-97be-b24a-aaa7-be448ce89a0e"],

Cell[BoxData["22"], "Output",
 CellChangeTimes->{3.9205344090826664`*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"95ad3215-fd86-9a42-ac03-5dad8d25f5f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mtimes", "[", 
   RowBox[{
    RowBox[{"mpower", "[", 
     RowBox[{"mtx", ",", " ", "2"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "eps", ",", " ", "eps", ",", " ", "eps", ",", " ", "eps", ",", " ", 
      "eps", ",", " ", "eps", ",", " ", "0", ",", " ", "eps", ",", " ", "eps",
       ",", " ", "eps", ",", " ", "eps", ",", " ", "eps", ",", " ", "eps", 
      ",", " ", "eps", ",", " ", "eps", ",", " ", "eps", ",", " ", "eps", ",",
       " ", "eps", ",", " ", "eps", ",", " ", "eps", ",", " ", "eps", ",", 
      " ", "eps"}], "}"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.920533341339548*^9, 3.920533341667671*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"2a370f4b-7083-e547-b6b2-8381d30606f0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "122.`", ",", "130.`", ",", "139.`", ",", "150.`", ",", "162.`", ",", 
   "170.`", ",", "178.`", ",", "99.`", ",", "110.`", ",", "52.`", ",", "66.`",
    ",", 
   RowBox[{"-", "\[Infinity]"}], ",", 
   RowBox[{"-", "\[Infinity]"}], ",", "99.`", ",", "24.`", ",", "27.`", ",", 
   "30.`", ",", "38.`", ",", "99.`", ",", "106.`", ",", "117.`", ",", 
   "128.`"}], "}"}]], "Output",
 CellChangeTimes->{3.920533342183201*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"7c5f7cb0-d9ef-564b-8f94-32d2d419128e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TAPs", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"-", "5"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.92053322855554*^9, 3.920533241071146*^9}, {
  3.920533652260557*^9, 3.9205336560574245`*^9}, {3.920533840386986*^9, 
  3.920533841027588*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"b1abce22-6d8b-b84c-be7b-2429e7fd69bc"],

Cell[BoxData["\<\"q:19:Sir_Duncan_Rice_Library_rev\"\>"], "Output",
 CellChangeTimes->{{3.9205332361180077`*^9, 3.9205332416805363`*^9}, 
   3.920533656479294*^9, 3.9205338420900936`*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"3f9662c0-192d-dd49-9646-15bff8622bd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"TimeObject", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "#", ",", "0"}], "}"}], "]"}], " ", "&"}], "/@", " ", 
   "xnext"}]}]], "Input",
 CellChangeTimes->{{3.9205317005132446`*^9, 3.920531805462351*^9}, {
   3.92053185873007*^9, 3.9205318666371803`*^9}, {3.920531921857153*^9, 
   3.920532019503824*^9}, 3.920532055285887*^9, {3.9205321799924316`*^9, 
   3.9205322745996284`*^9}, {3.9205323391098003`*^9, 3.920532348753256*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"6c1203ad-5542-7447-a429-983b66a2bbdc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{"\"00:33:00\""}], 
     RowBox[{"TimeObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"0", ",", "33", ",", "0.`"}], "}"}], ",", "\"Instant\""}], 
       "]"}]},
    "TimeObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"00:41:00\""}], 
     RowBox[{"TimeObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"0", ",", "41", ",", "0.`"}], "}"}], ",", "\"Instant\""}], 
       "]"}]},
    "TimeObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"00:50:00\""}], 
     RowBox[{"TimeObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"0", ",", "50", ",", "0.`"}], "}"}], ",", "\"Instant\""}], 
       "]"}]},
    "TimeObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"01:01:00\""}], 
     RowBox[{"TimeObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0.`"}], "}"}], ",", "\"Instant\""}], 
       "]"}]},
    "TimeObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"01:13:00\""}], 
     RowBox[{"TimeObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"1", ",", "13", ",", "0.`"}], "}"}], ",", "\"Instant\""}], 
       "]"}]},
    "TimeObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"01:21:00\""}], 
     RowBox[{"TimeObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"1", ",", "21", ",", "0.`"}], "}"}], ",", "\"Instant\""}], 
       "]"}]},
    "TimeObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"01:29:00\""}], 
     RowBox[{"TimeObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"1", ",", "29", ",", "0.`"}], "}"}], ",", "\"Instant\""}], 
       "]"}]},
    "TimeObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"00:10:00\""}], 
     RowBox[{"TimeObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"0", ",", "10", ",", "0.`"}], "}"}], ",", "\"Instant\""}], 
       "]"}]},
    "TimeObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"00:21:00\""}], 
     RowBox[{"TimeObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"0", ",", "21", ",", "0.`"}], "}"}], ",", "\"Instant\""}], 
       "]"}]},
    "TimeObject",
    Editable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.9205322279267483`*^9, 3.9205322832714176`*^9, 
  3.9205323515032425`*^9, 3.920532399223276*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"a5366d93-7ddf-ce47-ac10-ba5cda8c8b79"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Quotient", "[", 
    RowBox[{"minutes", ",", "100"}], "]"}], ",", 
   RowBox[{"Mod", "[", 
    RowBox[{"minutes", ",", "100"}], "]"}], ",", "0"}], "}"}]], "Input",Expres\
sionUUID->"710e7e82-a30b-944c-b0f4-37d471e78d22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"TAPs", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.919922580503167*^9, 3.919922594282508*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"90bd56f0-33fd-46b9-9037-b74a27075275"],

Cell[BoxData["138"], "Output",
 CellChangeTimes->{3.919922594932144*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"b1106dbf-5cab-47ef-b798-ba88fc4bc709"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", "initialMarkings", "]"}]], "Input",
 CellChangeTimes->{{3.919922620773081*^9, 3.919922624453582*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"54e8ec4c-055e-41b3-8fa5-0653ecda8a17"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.919922625517981*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"eae211ec-29f0-4f69-878f-f81938b4bcaa"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.920527899113983*^9, 
  3.920527905642885*^9}},ExpressionUUID->"fe89193f-4ffc-fe4a-b4d0-\
920bddaa759f"]
},
WindowSize->{1024.5, 513.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"160fd747-01ad-48ad-85a7-a7be17b9f4ac"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 254, 5, 28, "Input",ExpressionUUID->"216c8e68-752e-5042-94ff-66762cad0ecb"],
Cell[815, 27, 19101, 393, 1081, "Input",ExpressionUUID->"35ed2c39-e45d-43b6-aefa-edd2ea779dce",
 InitializationCell->True],
Cell[19919, 422, 246, 6, 44, "Input",ExpressionUUID->"4e5a63ce-f4f1-4277-910d-88d6901710fc",
 InitializationCell->True],
Cell[20168, 430, 221, 5, 44, "Input",ExpressionUUID->"967114cb-0f1b-4adf-b847-4e75c9c0952d",
 InitializationCell->True],
Cell[20392, 437, 407, 10, 44, "Input",ExpressionUUID->"411b306c-7b23-43ff-9265-ae38e8a76e03",
 InitializationCell->True],
Cell[20802, 449, 361, 8, 44, "Input",ExpressionUUID->"feec1f19-81d5-47bf-be9b-f03958b3cd32",
 InitializationCell->True],
Cell[21166, 459, 1553, 36, 216, "Input",ExpressionUUID->"28d1f9ad-ae6f-4e96-ba1e-0995b1b81b0f",
 InitializationCell->True],
Cell[22722, 497, 2779, 65, 349, "Input",ExpressionUUID->"aff26f37-7117-4890-937b-705ec5cb0178",
 InitializationCell->True],
Cell[25504, 564, 311, 8, 44, "Input",ExpressionUUID->"01eb0f01-0036-4525-a9b3-39fef5d7e25f",
 InitializationCell->True],
Cell[25818, 574, 182, 4, 44, "Input",ExpressionUUID->"415293d7-cd90-436d-831a-12617695ee19",
 InitializationCell->True],
Cell[26003, 580, 868, 22, 64, "Input",ExpressionUUID->"712ddaa6-5276-dc41-8189-2c075736714f",
 InitializationCell->True],
Cell[26874, 604, 913, 25, 64, "Input",ExpressionUUID->"2e00cdda-36f4-a343-b839-3545576149c4",
 InitializationCell->True],
Cell[27790, 631, 941, 20, 64, "Input",ExpressionUUID->"3c92f7e5-657e-4fa3-acf6-ac40181cf10e",
 InitializationCell->True],
Cell[28734, 653, 1295, 25, 64, "Input",ExpressionUUID->"03550ad2-3d82-4105-92c8-afa73c5457fe",
 InitializationCell->True],
Cell[30032, 680, 5768, 130, 482, "Input",ExpressionUUID->"31323f97-3ab2-4596-9971-6c88e6062f81",
 InitializationCell->True],
Cell[35803, 812, 2231, 48, 121, "Input",ExpressionUUID->"eb56b9bb-dadc-4427-ab0e-80b258751220",
 InitializationCell->True],
Cell[38037, 862, 1400, 26, 83, "Input",ExpressionUUID->"037e4956-b6cf-4d8a-a6fb-8a303e193e40",
 InitializationCell->True],
Cell[39440, 890, 31558, 601, 2088, "Input",ExpressionUUID->"33914b71-3dd3-4a58-ac7f-ae396980de99",
 InitializationCell->True],
Cell[71001, 1493, 26270, 475, 2019, "Input",ExpressionUUID->"53a60471-21ed-4214-8cce-2f2fe72a4d6f",
 InitializationCell->True],
Cell[97274, 1970, 186, 4, 28, "Input",ExpressionUUID->"33a15957-5d2c-7549-b48a-b116da376a28"],
Cell[97463, 1976, 3615, 91, 238, "Input",ExpressionUUID->"d29b8eaf-6fc7-465d-8c07-d4deebd9050c"],
Cell[101081, 2069, 966, 20, 28, "Input",ExpressionUUID->"7105971c-bd6b-45fd-b020-bf88947505d5"],
Cell[CellGroupData[{
Cell[102072, 2093, 1083, 21, 28, "Input",ExpressionUUID->"3357212c-45f0-45ac-8456-2a2248117a40"],
Cell[CellGroupData[{
Cell[103180, 2118, 341, 7, 22, "Print",ExpressionUUID->"e5fa8890-2dc0-9042-9922-def363db2a8c"],
Cell[103524, 2127, 364, 8, 22, "Print",ExpressionUUID->"b0f888a9-eb56-4742-9423-2461254bc76c"],
Cell[103891, 2137, 374, 8, 22, "Print",ExpressionUUID->"32464ada-3cb4-a241-9681-527613204106"],
Cell[104268, 2147, 386, 8, 22, "Print",ExpressionUUID->"b86af08b-db11-834b-99a2-24d95750d4b7"],
Cell[104657, 2157, 396, 8, 22, "Print",ExpressionUUID->"77d727e6-6e74-074b-ba67-e117b63c54b0"],
Cell[105056, 2167, 409, 9, 22, "Print",ExpressionUUID->"f2cd3471-d478-2a49-af84-733a191f7d66"],
Cell[105468, 2178, 419, 9, 22, "Print",ExpressionUUID->"d7828342-de2c-b74e-9dcc-1de0c8104547"],
Cell[105890, 2189, 430, 10, 22, "Print",ExpressionUUID->"711fe796-174d-cf47-a6d2-bd998ccac092"],
Cell[106323, 2201, 443, 10, 22, "Print",ExpressionUUID->"379d59a8-070c-bc4b-8890-9868bf1ba815"],
Cell[106769, 2213, 454, 10, 22, "Print",ExpressionUUID->"b5ce7618-5fed-c24d-aea4-348caac0d157"],
Cell[107226, 2225, 463, 10, 22, "Print",ExpressionUUID->"5d249924-182b-6547-9825-6585defcc04f"],
Cell[107692, 2237, 474, 10, 22, "Print",ExpressionUUID->"96f0c0f3-daf4-da4a-a95e-b8f47bcb0564"],
Cell[108169, 2249, 487, 10, 22, "Print",ExpressionUUID->"ef95c077-d7d0-b743-8afb-ccb742cb76be"],
Cell[108659, 2261, 499, 11, 22, "Print",ExpressionUUID->"240a91d9-821b-5a4e-ad78-031e238fc237"],
Cell[109161, 2274, 511, 11, 22, "Print",ExpressionUUID->"f2be520d-b898-1947-8d25-d50e2dcc4812"],
Cell[109675, 2287, 522, 11, 22, "Print",ExpressionUUID->"c976548f-416a-ab40-81a6-681ff131b2af"],
Cell[110200, 2300, 535, 11, 22, "Print",ExpressionUUID->"a9dfb511-00e9-b042-9d21-9fdd4fdc2b9f"],
Cell[110738, 2313, 546, 11, 22, "Print",ExpressionUUID->"d50acaaf-b552-ca40-ae47-33795e176d4b"],
Cell[111287, 2326, 555, 11, 22, "Print",ExpressionUUID->"cba5f8b7-1d47-bb4d-b0a6-eaa3d2f19796"],
Cell[111845, 2339, 566, 11, 22, "Print",ExpressionUUID->"107d0bb1-e1c3-dd41-b3cb-e05b5c1754d6"],
Cell[112414, 2352, 580, 12, 22, "Print",ExpressionUUID->"8b6419ec-efaf-2640-84cc-faca60a1ec68"],
Cell[112997, 2366, 591, 12, 22, "Print",ExpressionUUID->"cbc1ab4e-d411-2941-b2a7-8a864ff33b60"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113637, 2384, 508, 12, 28, "Input",ExpressionUUID->"5fea0236-69c4-487b-a1ba-c66d54007b62"],
Cell[114148, 2398, 248, 3, 32, "Output",ExpressionUUID->"977d603c-657d-724f-9ba1-afbe9a6f0b1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114433, 2406, 213, 4, 28, "Input",ExpressionUUID->"1fd6504c-0431-48aa-9616-f9cb0a286c37"],
Cell[114649, 2412, 342, 7, 32, "Output",ExpressionUUID->"fd546921-fb19-ff42-9eaf-9297d4d4afc8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115028, 2424, 405, 8, 28, "Input",ExpressionUUID->"b0b63b28-a141-9642-b1c6-c7a0807ac358"],
Cell[115436, 2434, 7303, 118, 209, "Output",ExpressionUUID->"630766d0-dd43-1948-8f72-c87a55400cce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122776, 2557, 1304, 35, 124, "Input",ExpressionUUID->"db57295f-66af-fd4a-881f-8c61b60a14e3"],
Cell[124083, 2594, 174244, 2977, 906, 35245, 698, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"3ab99a25-f6cb-9e49-b16e-b4cb52395fde"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298364, 5576, 282, 6, 28, "Input",ExpressionUUID->"dd81afa4-561b-c044-bb6a-a0b2c9f56864"],
Cell[298649, 5584, 1385, 27, 109, "Output",ExpressionUUID->"e65a3276-f645-7443-82dd-72a705108172"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300071, 5616, 1895, 50, 105, "Input",ExpressionUUID->"ecdeba4b-4739-4e2d-abe8-a231f2bcc863"],
Cell[301969, 5668, 15360, 273, 491, "Output",ExpressionUUID->"ee071e52-c2a4-9b46-afbb-777773dc947c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317366, 5946, 222, 4, 28, "Input",ExpressionUUID->"a73a869d-0b65-e441-a500-e89a53dbbbea"],
Cell[317591, 5952, 17576, 481, 397, "Output",ExpressionUUID->"49f9f16f-7be3-a641-9762-bbb4005ee4e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335204, 6438, 1009, 19, 48, "Input",ExpressionUUID->"ed546790-f2c1-bd44-a516-46dac81ddb6a"],
Cell[336216, 6459, 799, 17, 32, "Output",ExpressionUUID->"7114cde6-0e22-c94f-aaa4-def45bfc47f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337052, 6481, 484, 12, 28, "Input",ExpressionUUID->"f9f458af-1a62-4c44-9255-716a2cfcc1a3"],
Cell[337539, 6495, 1969, 46, 398, "Output",ExpressionUUID->"027afb06-4dfd-bc4e-ab5c-a07f06575703"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339545, 6546, 329, 7, 48, "Input",ExpressionUUID->"918548da-f6bb-dd45-9fef-df20f7a8034a"],
Cell[339877, 6555, 156, 3, 32, "Output",ExpressionUUID->"309908c8-97be-b24a-aaa7-be448ce89a0e"],
Cell[340036, 6560, 156, 3, 32, "Output",ExpressionUUID->"95ad3215-fd86-9a42-ac03-5dad8d25f5f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340229, 6568, 762, 16, 48, "Input",ExpressionUUID->"2a370f4b-7083-e547-b6b2-8381d30606f0"],
Cell[340994, 6586, 546, 12, 32, "Output",ExpressionUUID->"7c5f7cb0-d9ef-564b-8f94-32d2d419128e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341577, 6603, 399, 10, 28, "Input",ExpressionUUID->"b1abce22-6d8b-b84c-be7b-2429e7fd69bc"],
Cell[341979, 6615, 270, 4, 32, "Output",ExpressionUUID->"3f9662c0-192d-dd49-9646-15bff8622bd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342286, 6624, 601, 13, 48, "Input",ExpressionUUID->"6c1203ad-5542-7447-a429-983b66a2bbdc"],
Cell[342890, 6639, 2601, 87, 43, "Output",ExpressionUUID->"a5366d93-7ddf-ce47-ac10-ba5cda8c8b79"]
}, Open  ]],
Cell[345506, 6729, 272, 7, 28, "Input",ExpressionUUID->"710e7e82-a30b-944c-b0f4-37d471e78d22"],
Cell[CellGroupData[{
Cell[345803, 6740, 263, 6, 28, "Input",ExpressionUUID->"90bd56f0-33fd-46b9-9037-b74a27075275"],
Cell[346069, 6748, 155, 3, 32, "Output",ExpressionUUID->"b1106dbf-5cab-47ef-b798-ba88fc4bc709"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346261, 6756, 219, 4, 28, "Input",ExpressionUUID->"54e8ec4c-055e-41b3-8fa5-0653ecda8a17"],
Cell[346483, 6762, 153, 3, 32, "Output",ExpressionUUID->"eae211ec-29f0-4f69-878f-f81938b4bcaa"]
}, Open  ]],
Cell[346651, 6768, 152, 3, 28, "Input",ExpressionUUID->"fe89193f-4ffc-fe4a-b4d0-920bddaa759f"]
}
]
*)

